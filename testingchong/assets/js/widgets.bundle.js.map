{"version":3,"file":"js/widgets.bundle.js","mappings":";;;;;;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;;;;AC1Ka;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,2DAA2D;AAC3D,+DAA+D;;AAE/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;;;;AC3Ea;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,2DAA2D;AAC3D,+DAA+D;;AAE/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;;;;AC3Ea;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;;;;ACpKa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC/JY;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;AC/JY;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC7JY;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;;;;;;;;;;ACpLa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACxLY;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;;;;;;;;;;AChLa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,qDAAqD;AACrD,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA,8DAA8D;AAC9D,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,KAAK,MAAM,UAAU,GAAG,OAAO;AAC9E,yBAAyB;AACzB,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,SAAS,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC5UY;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,iBAAiB;AACjB;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,+BAA+B,SAAS,GAAG,OAAO;AAClD;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC/MY;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA,8DAA8D;AAC9D,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,+BAA+B,UAAU,GAAG,OAAO;AACnD;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACvPY;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA;;AAEA,gCAAgC,iBAAiB;AACjD;AACA;AACA;;AAEA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA,8DAA8D;AAC9D,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,+BAA+B,UAAU,GAAG,OAAO;AACnD;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC3PY;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,kBAAkB,yFAAyF;AAC3G,kBAAkB,wFAAwF;AAC1G,kBAAkB,yFAAyF;AAC3G,kBAAkB,yFAAyF;AAC3G,kBAAkB,sFAAsF;AACxG,kBAAkB;AAClB;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACrGY;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;;;;;;;;;;ACnKa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACtKY;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC9KY;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC9KY;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;;;;;;;;;;AC/Ga;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;;;;;;;;;;ACzJa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;;;;;;;;;;ACjKa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;;;;;;;;;;AC/La;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B;AAC3B;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;;;;;;;;;;AC7Ka;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,+BAA+B,KAAK;AACpC;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,+BAA+B,KAAK;AACpC;AACA;AACA,aAAa;;AAEb,kDAAkD;;AAElD;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA,sEAAsE;;AAEtE;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA,SAAS,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AChIY;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC;;;AAGD;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;;;;ACtGa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACnLY;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACnFY;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uFAAuF;;AAEvF;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8BAA8B;AAChD,kBAAkB,8BAA8B;AAChD;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AChRY;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oFAAoF;AACpF;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8BAA8B;AAChD;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACpEY;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,qBAAqB;AACpH,iBAAiB;;AAEjB,4DAA4D,YAAY;AACxE,4EAA4E,YAAY,+CAA+C,eAAe;AACtJ;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,iFAAiF,aAAa;AAC9F;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,qBAAqB;AACpH,iBAAiB;;AAEjB,4DAA4D,YAAY;AACxE,4EAA4E,YAAY,+CAA+C,eAAe;AACtJ;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,iFAAiF,aAAa;AAC9F;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,qBAAqB;AACpH,iBAAiB;;AAEjB,4DAA4D,YAAY;AACxE,4EAA4E,YAAY,+CAA+C,eAAe;AACtJ;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,iFAAiF,aAAa;AAC9F;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AClkBY;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;;;;;;UChFA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA","sources":["webpack://keenthemes/../src/js/widgets/cards/widget-1.js","webpack://keenthemes/../src/js/widgets/cards/widget-10.js","webpack://keenthemes/../src/js/widgets/cards/widget-4.js","webpack://keenthemes/../src/js/widgets/cards/widget-6.js","webpack://keenthemes/../src/js/widgets/cards/widget-8.js","webpack://keenthemes/../src/js/widgets/cards/widget-9.js","webpack://keenthemes/../src/js/widgets/charts/widget-1.js","webpack://keenthemes/../src/js/widgets/charts/widget-10.js","webpack://keenthemes/../src/js/widgets/charts/widget-11.js","webpack://keenthemes/../src/js/widgets/charts/widget-12.js","webpack://keenthemes/../src/js/widgets/charts/widget-13.js","webpack://keenthemes/../src/js/widgets/charts/widget-14.js","webpack://keenthemes/../src/js/widgets/charts/widget-15.js","webpack://keenthemes/../src/js/widgets/charts/widget-16.js","webpack://keenthemes/../src/js/widgets/charts/widget-17.js","webpack://keenthemes/../src/js/widgets/charts/widget-18.js","webpack://keenthemes/../src/js/widgets/charts/widget-2.js","webpack://keenthemes/../src/js/widgets/charts/widget-3.js","webpack://keenthemes/../src/js/widgets/charts/widget-4.js","webpack://keenthemes/../src/js/widgets/charts/widget-5.js","webpack://keenthemes/../src/js/widgets/charts/widget-6.js","webpack://keenthemes/../src/js/widgets/charts/widget-7.js","webpack://keenthemes/../src/js/widgets/charts/widget-8.js","webpack://keenthemes/../src/js/widgets/charts/widget-9.js","webpack://keenthemes/../src/js/widgets/maps/widget-1.js","webpack://keenthemes/../src/js/widgets/sliders/widget-1.js","webpack://keenthemes/../src/js/widgets/sliders/widget-3.js","webpack://keenthemes/../src/js/widgets/tables/widget-3.js","webpack://keenthemes/../src/js/widgets/tables/widget-4.js","webpack://keenthemes/../src/js/widgets/tables/widget-5.js","webpack://keenthemes/../src/js/widgets/timeline/widget-1.js","webpack://keenthemes/../src/js/widgets/timeline/widget-2.js","webpack://keenthemes/webpack/bootstrap","webpack://keenthemes/webpack/before-startup","webpack://keenthemes/webpack/startup","webpack://keenthemes/webpack/after-startup"],"sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTCardsWidget1 = function () {\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_card_widget_1_chart\");\n        \n        if (!element) {\n            return;\n        }\n\n        var color = element.getAttribute('data-kt-chart-color');\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');         \n        var baseColor = KTUtil.isHexColor(color) ? color : KTUtil.getCssVariableValue('--bs-' + color);\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');        \n\n        var options = {\n            series: [{\n                name: 'Net Profit',\n                data: [30, 75, 55, 45, 30, 60, 75, 50],\n                margin: {\n\t\t\t\t\tleft: 5,\n\t\t\t\t\tright: 5\n\t\t\t\t}   \n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: height,\n                toolbar: {\n                    show: false\n                },\n                sparkline: {\n                    enabled: true\n                }\n            },\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                    columnWidth: ['35%'],\n                    borderRadius: 6\n                }\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            stroke: {\n                show: true,\n                width: 4,\n                colors: ['transparent']\n            },\n            xaxis: {                \n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },               \n                crosshairs: {\n                    show: false\n                }\n            },\n            yaxis: {\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                }\n            },\n            fill: {\n                type: 'solid'\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                x: {\n                    formatter: function (val) {\n                        return \"Impression: \" + val\n                    }\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \" revenue\"\n                    }\n                }\n            },\n            colors: [baseColor, secondaryColor],\n            grid: {\n                borderColor: false,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                },\n                padding: {\n                    top: 10,\n\t\t\t\t\tleft: 25,\n\t\t\t\t\tright: 25     \n\t\t\t\t}               \n            }\n        };\n\n        // Set timeout to properly get the parent elements width\n        var chart = new ApexCharts(element, options);\n        \n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.render();   \n        }, 300);  \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTCardsWidget1;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTCardsWidget1.init();\n});\n   \n        \n        \n        \n           ","\"use strict\";\n\n// Class definition\nvar KTCardsWidget10 = function () {\n    // Private methods\n    var initChart = function() {\n        var el = document.getElementById('kt_card_widget_10_chart'); \n\n        if (!el) {\n            return;\n        }\n\n        var options = {\n            size: el.getAttribute('data-kt-size') ? parseInt(el.getAttribute('data-kt-size')) : 70,\n            lineWidth: el.getAttribute('data-kt-line') ? parseInt(el.getAttribute('data-kt-line')) : 11,\n            rotate: el.getAttribute('data-kt-rotate') ? parseInt(el.getAttribute('data-kt-rotate')) : 145,            \n            //percent:  el.getAttribute('data-kt-percent') ,\n        }\n\n        var canvas = document.createElement('canvas');\n        var span = document.createElement('span'); \n            \n        if (typeof(G_vmlCanvasManager) !== 'undefined') {\n            G_vmlCanvasManager.initElement(canvas);\n        }\n\n        var ctx = canvas.getContext('2d');\n        canvas.width = canvas.height = options.size;\n\n        el.appendChild(span);\n        el.appendChild(canvas);\n\n        ctx.translate(options.size / 2, options.size / 2); // change center\n        ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg\n\n        //imd = ctx.getImageData(0, 0, 240, 240);\n        var radius = (options.size - options.lineWidth) / 2;\n\n        var drawCircle = function(color, lineWidth, percent) {\n            percent = Math.min(Math.max(0, percent || 1), 1);\n            ctx.beginPath();\n            ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);\n            ctx.strokeStyle = color;\n            ctx.lineCap = 'round'; // butt, round or square\n            ctx.lineWidth = lineWidth\n            ctx.stroke();\n        };\n\n        // Init \n        drawCircle('#E4E6EF', options.lineWidth, 100 / 100); \n        drawCircle(KTUtil.getCssVariableValue('--bs-primary'), options.lineWidth, 100 / 150);\n        drawCircle(KTUtil.getCssVariableValue('--bs-success'), options.lineWidth, 100 / 250);   \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTCardsWidget10;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTCardsWidget10.init();\n});\n   \n        \n        \n        \n           ","\"use strict\";\n\n// Class definition\nvar KTCardsWidget4 = function () {\n    // Private methods\n    var initChart = function() {\n        var el = document.getElementById('kt_card_widget_4_chart'); \n\n        if (!el) {\n            return;\n        }\n\n        var options = {\n            size: el.getAttribute('data-kt-size') ? parseInt(el.getAttribute('data-kt-size')) : 70,\n            lineWidth: el.getAttribute('data-kt-line') ? parseInt(el.getAttribute('data-kt-line')) : 11,\n            rotate: el.getAttribute('data-kt-rotate') ? parseInt(el.getAttribute('data-kt-rotate')) : 145,            \n            //percent:  el.getAttribute('data-kt-percent') ,\n        }\n\n        var canvas = document.createElement('canvas');\n        var span = document.createElement('span'); \n            \n        if (typeof(G_vmlCanvasManager) !== 'undefined') {\n            G_vmlCanvasManager.initElement(canvas);\n        }\n\n        var ctx = canvas.getContext('2d');\n        canvas.width = canvas.height = options.size;\n\n        el.appendChild(span);\n        el.appendChild(canvas);\n\n        ctx.translate(options.size / 2, options.size / 2); // change center\n        ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg\n\n        //imd = ctx.getImageData(0, 0, 240, 240);\n        var radius = (options.size - options.lineWidth) / 2;\n\n        var drawCircle = function(color, lineWidth, percent) {\n            percent = Math.min(Math.max(0, percent || 1), 1);\n            ctx.beginPath();\n            ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);\n            ctx.strokeStyle = color;\n            ctx.lineCap = 'round'; // butt, round or square\n            ctx.lineWidth = lineWidth\n            ctx.stroke();\n        };\n\n        // Init \n        drawCircle('#E4E6EF', options.lineWidth, 100 / 100); \n        drawCircle(KTUtil.getCssVariableValue('--bs-danger'), options.lineWidth, 100 / 150);\n        drawCircle(KTUtil.getCssVariableValue('--bs-primary'), options.lineWidth, 100 / 250);   \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTCardsWidget4;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTCardsWidget4.init();\n});\n   \n        \n        \n        \n           ","\"use strict\";\n\n// Class definition\nvar KTCardsWidget6 = function () {\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_card_widget_6_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-primary');\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');\n\n        var options = {\n            series: [{\n                name: 'Sales',\n                data: [30, 60, 53, 45, 60, 75, 53]\n            }, ],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: height,\n                toolbar: {\n                    show: false\n                },\n                sparkline: {\n                    enabled: true\n                }\n            },\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                    columnWidth: ['55%'],\n                    borderRadius: 6\n                }\n            },\n            legend: {\n                show: false,\n            },\n            dataLabels: {\n                enabled: false\n            },\n            stroke: {\n                show: true,\n                width: 9,\n                colors: ['transparent']\n            },\n            xaxis: {                \n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false,\n                    tickPlacement: 'between'\n                },\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    show: false\n                }\n            },\n            yaxis: {\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                }\n            },\n            fill: {\n                type: 'solid'\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                x: {\n                    formatter: function (val) {\n                        return 'Impressions: ' + val;\n                    }\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \"K\"\n                    }\n                }\n            },\n            colors: [baseColor, secondaryColor],\n            grid: {\n                padding: {\n                    left: 10,\n                    right: 10\n                },\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }             \n            }\n        }; \n\n        var chart = new ApexCharts(element, options);\n        \n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.render();   \n        }, 300);     \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTCardsWidget6;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTCardsWidget6.init();\n});\n   \n        \n        \n        \n           ","\"use strict\";\n\n// Class definition\nvar KTCardWidget8 = function () {\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_card_widget_8_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));       \n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-gray-800');\n        var lightColor = KTUtil.getCssVariableValue('--bs-light-info');\n\n        var options = {\n            series: [{\n                name: 'Net Profit',\n                data: [35, 25, 45, 15, 60, 50, 57, 35, 70, 40, 45, 25, 45, 30, 70]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },             \n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: 'solid',\n                opacity: 0\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 2,\n                colors: [baseColor]\n            },\n            xaxis: {                 \n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    show: false\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                x: {\n                    formatter: function (val) {\n                        return \"Impression \" + val;\n                    }\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \" thousands\"\n                    }\n                }\n            },\n            colors: [lightColor],\n            grid: {                 \n                strokeDashArray: 4,\n                padding: {\n                    top: 0,\n                    right: -20,\n                    bottom: -20,\n                    left: -20\n                },\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 2\n            }\n        }; \n\n        var chart = new ApexCharts(element, options);\n        \n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.render();   \n        }, 300);  \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTCardWidget8;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTCardWidget8.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTCardWidget9 = function () {\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_card_widget_9_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));       \n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-gray-800');\n        var lightColor = KTUtil.getCssVariableValue('--bs-light-info');\n\n        var options = {\n            series: [{\n                name: 'Net Profit',\n                data: [35, 25, 35, 15, 40, 60, 25, 40, 70, 30, 55, 45, 45, 30, 50]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },             \n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: 'solid',\n                opacity: 0\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 2,\n                colors: [baseColor]\n            },\n            xaxis: {                 \n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    show: false\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                x: {\n                    formatter: function (val) {\n                        return \"Sales \" + val;\n                    }\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \" thousands\"\n                    }\n                }\n            },\n            colors: [lightColor],\n            grid: {                 \n                strokeDashArray: 4,\n                padding: {\n                    top: 0,\n                    right: -20,\n                    bottom: -20,\n                    left: -20\n                },\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 2\n            }\n        }; \n\n        var chart = new ApexCharts(element, options);\n        \n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.render();   \n        }, 300);  \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTCardWidget9;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTCardWidget9.init();\n});","\"use strict\";\n\n// Class definition\nvar KTChartsWidget1 = function () {\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_1\");\n\n        if (!element) {\n            return;\n        }\n\n        var negativeColor = element.hasAttribute('data-kt-negative-color') ? element.getAttribute('data-kt-negative-color') : KTUtil.getCssVariableValue('--bs-success');\n\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n\n        var baseColor = KTUtil.getCssVariableValue('--bs-primary');\n\n        var options = {\n            series: [{\n                name: 'Net Profit',\n                data: [20, 30, 20, 40, 60, 75, 65, 18, 10, 5, 15, 40, 60, 18, 35, 55, 20]\n            }, {\n                name: 'Revenue',\n                data: [-20, -15, -5, -20, -30, -15, -10, -8, -5, -5, -10, -25, -15, -5, -10, -5, -15]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                stacked: true,\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n                bar: {\n                    //horizontal: false,\n                    columnWidth: \"35%\",\n                    barHeight: \"70%\",\n                    borderRadius: [6, 6]\n                }\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            xaxis: {\n                categories: ['Jan 5', 'Jan 7', 'Jan 9', 'Jan 11', 'Jan 13', 'Jan 15', 'Jan 17', 'Jan 19', 'Jan 20', 'Jan 21', 'Jan 23', 'Jan 24', 'Jan 25', 'Jan 26', 'Jan 24', 'Jan 28', 'Jan 29'],\n                axisBorder: {\n                    show: false\n                },\n                axisTicks: {\n                    show: false\n                },\n                tickAmount: 10,\n                labels: {\n                    //rotate: -45,\n                    //rotateAlways: true,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    show: false\n                }\n            },\n            yaxis: {\n                min: -50,\n                max: 80,\n                tickAmount: 6,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    },\n                    formatter: function (val) {\n                        return parseInt(val) + \"K\"\n                    }\n                }\n            },\n            fill: {\n                opacity: 1\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px',\n                    borderRadius: 4\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \" thousands\"\n                    }\n                }\n            },\n            colors: [baseColor, negativeColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,               \n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            }\n        };\n\n        var chart = new ApexCharts(element, options);\n        \n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.render();   \n        }, 200);    \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTChartsWidget1;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTChartsWidget1.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTChartsWidget10 = function () {\n    // Private methods\n    var initChart = function(tabSelector, chartSelector, data, initByDefault) {\n        var element = document.querySelector(chartSelector);\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-900');\n\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');    \n\n        var options = {\n            series: [{\n                name: 'Net Profit',\n                data: data\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: height,\n                toolbar: {\n                    show: false\n                }              \n            },\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                    columnWidth: ['22%'],\n                    borderRadius: 5,                     \n                    dataLabels: {\n                        position: \"top\" // top, center, bottom\n                    },\n                    startingShape: 'flat'\n                },\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: true, \n                offsetY: -30,                                             \n                style: {\n                    fontSize: '13px',\n                    colors: ['labelColor']\n                },\n                formatter: function(val) {\n                    return val + \"%\";\n                }          \n            },\n            stroke: {\n                show: true,\n                width: 2,\n                colors: ['transparent']\n            },\n            xaxis: {\n                categories: ['Metals', 'Energy', 'Agro', 'Machines', 'Transport', 'Textile', 'Wood'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    }                    \n                },\n                crosshairs: {\n                    fill: {         \n                        gradient: {         \n                            opacityFrom: 0,\n                            opacityTo: 0\n                        }\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    },\n                    formatter: function (val) {\n                        return parseInt(val) + \"K\"\n                    }\n                }\n            },\n            fill: {\n                opacity: 1\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \" thousands\"\n                    }\n                }\n            },\n            colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-light-primary')],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            }\n        };\n\n        var chart = new ApexCharts(element, options);\n\n        var init = false;\n        var tab = document.querySelector(tabSelector);\n        \n        if (initByDefault === true) {\n            chart.render();\n            init = true;\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (init == false) {\n                chart.render();\n                init = true;\n            }\n        })\n    }\n\n    // Public methods\n    return {\n        init: function () {   \n            initChart('#kt_charts_widget_10_tab_1', '#kt_charts_widget_10_chart_1', [30, 18, 43, 70, 13, 37, 23], true);\n            initChart('#kt_charts_widget_10_tab_2', '#kt_charts_widget_10_chart_2', [25, 55, 35, 50, 45, 20, 31], false); \n            initChart('#kt_charts_widget_10_tab_3', '#kt_charts_widget_10_chart_3', [45, 15, 35, 70, 45, 50, 21], false);\n            initChart('#kt_charts_widget_10_tab_4', '#kt_charts_widget_10_chart_4', [15, 55, 25, 50, 25, 60, 31], false);            \n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTChartsWidget10;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTChartsWidget10.init();\n});\n\n\n ","\"use strict\";\n\n// Class definition\nvar KTChartsWidget11 = function () {\n    // Private methods\n    var initChart = function(tabSelector, chartSelector, data, initByDefault) {\n        var element = document.querySelector(chartSelector);\n        var height = parseInt(KTUtil.css(element, 'height'));\n\n        if (!element) {\n            return;\n        }        \n        \n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-success');\n        var lightColor = KTUtil.getCssVariableValue('--bs-success');\n\n        var options = {\n            series: [{\n                name: 'Sales',\n                data: data\n            }],            \n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                shadeIntensity: 1,\n                opacityFrom: 0.3,\n                opacityTo: 0.7,\n                stops: [0, 90, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['', 'Apr 02', 'Apr 06', 'Apr 06', 'Apr 05', 'Apr 06', 'Apr 10', 'Apr 08', 'Apr 09', 'Apr 14', 'Apr 10', 'Apr 12', 'Apr 18', 'Apr 14', \n                    'Apr 15', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 02', 'Apr 06', 'Apr 18', 'Apr 05', 'Apr 06', 'Apr 10', 'Apr 08', 'Apr 22', 'Apr 14', 'Apr 11', 'Apr 12', ''\n                ],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                tickAmount: 5,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: true,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '13px'\n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '13px'\n                    }\n                }\n            },\n            yaxis: {\n                tickAmount: 4,\n                max: 24,\n                min: 10,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '13px'\n                    }                     \n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \"K\"\n                    }\n                }\n            },\n            colors: [lightColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        var chart = new ApexCharts(element, options);\n        var init = false;\n        var tab = document.querySelector(tabSelector);\n        \n        if (initByDefault === true) {\n            chart.render();\n            init = true;\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (init == false) {\n                chart.render();\n                init = true;\n            }\n        })   \n    }\n\n    // Public methods\n    return {\n        init: function () {           \n            initChart('#kt_chart_widget_11_tab_1', '#kt_chart_widget_11_chart_1', [16, 19, 19, 16, 16, 14, 15, 15, 17, 17, 19, 19, 18, 18, 20, 20, 18, 18, 22, 22, 20, 20, 18, 18, 20, 20, 18, 20, 20, 22], false);\n            initChart('#kt_chart_widget_11_tab_2', '#kt_chart_widget_11_chart_2', [18, 18, 20, 20, 18, 18, 22, 22, 20, 20, 18, 18, 20, 20, 18, 18, 20, 20, 22, 15, 18, 18, 17, 17, 15, 15, 17, 17, 19, 17], false); \n            initChart('#kt_chart_widget_11_tab_3', '#kt_chart_widget_11_chart_3', [17, 20, 20, 19, 19, 17, 17, 19, 19, 21, 21, 19, 19, 21, 21, 18, 18, 16, 17, 17, 19, 19, 21, 21, 19, 19, 17, 17, 18, 18], true); \n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTChartsWidget11;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTChartsWidget11.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTChartsWidget12 = function () {\n    // Private methods\n    var initChart = function(tabSelector, chartSelector, data, initByDefault) {\n        var element = document.querySelector(chartSelector);\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-900');\n\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');    \n\n        var options = {\n            series: [{\n                name: 'Net Profit',\n                data: data\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: height,\n                toolbar: {\n                    show: false\n                }              \n            },\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                    columnWidth: ['22%'],\n                    borderRadius: 5,                     \n                    dataLabels: {\n                        position: \"top\" // top, center, bottom\n                    },\n                    startingShape: 'flat'\n                },\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: true, \n                offsetY: -28,                                             \n                style: {\n                    fontSize: '13px',\n                    colors: ['labelColor']\n                }                         \n            },\n            stroke: {\n                show: true,\n                width: 2,\n                colors: ['transparent']\n            },\n            xaxis: {\n                categories: ['Grossey', 'Pet Food', 'Flowers', 'Restaurant', 'Kids Toys', 'Clothing', 'Still Water'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    }                    \n                },\n                crosshairs: {\n                    fill: {         \n                        gradient: {         \n                            opacityFrom: 0,\n                            opacityTo: 0\n                        }\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    },\n                    formatter: function (val) {\n                        return parseInt(val) + \"K\"\n                    }\n                }\n            },\n            fill: {\n                opacity: 1\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \" thousands\"\n                    }\n                }\n            },\n            colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-light-primary')],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            }\n        };\n\n        var chart = new ApexCharts(element, options);\n\n        var init = false;\n        var tab = document.querySelector(tabSelector);\n        \n        if (initByDefault === true) {\n            chart.render();\n            init = true;\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (init == false) {\n                chart.render();\n                init = true;\n            }\n        })\n    }\n\n    // Public methods\n    return {\n        init: function () {   \n            initChart('#kt_charts_widget_12_tab_1', '#kt_charts_widget_12_chart_1', [54, 42, 75, 110, 23, 87, 50], true);\n            initChart('#kt_charts_widget_12_tab_2', '#kt_charts_widget_12_chart_2', [25, 55, 35, 50, 45, 20, 31], false); \n            initChart('#kt_charts_widget_12_tab_3', '#kt_charts_widget_12_chart_3', [45, 15, 35, 70, 45, 50, 21], false); \n        }        \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTChartsWidget12;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTChartsWidget12.init();\n});\n\n\n ","\"use strict\";\n\n// Class definition\nvar KTChartsWidget13 = (function () {\n    // Private methods\n    var initChart = function () {\n        // Check if amchart library is included\n        if (typeof am5 === \"undefined\") {\n            return;\n        }\n\n        var element = document.getElementById(\"kt_charts_widget_13_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        am5.ready(function () {\n            // Create root element\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n            var root = am5.Root.new(element);\n\n            // Set themes\n            // https://www.amcharts.com/docs/v5/concepts/themes/\n            root.setThemes([am5themes_Animated.new(root)]);\n\n            // Create chart\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/\n            var chart = root.container.children.push(\n                am5xy.XYChart.new(root, {\n                    panX: true,\n                    panY: true,\n                    wheelX: \"panX\",\n                    wheelY: \"zoomX\",\n                })\n            );\n\n            // Add cursor\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\n            var cursor = chart.set(\n                \"cursor\",\n                am5xy.XYCursor.new(root, {\n                    behavior: \"none\"\n                })\n            );\n\n            cursor.lineY.set(\"visible\", false);\n\n            // The data\n            var data = [\n                {\n                    year: \"2003\",\n                    cars: 1587,\n                    motorcycles: 650,\n                    bicycles: 121,\n                },\n                {\n                    year: \"2004\",\n                    cars: 1567,\n                    motorcycles: 683,\n                    bicycles: 146,\n                },\n                {\n                    year: \"2005\",\n                    cars: 1617,\n                    motorcycles: 691,\n                    bicycles: 138,\n                },\n                {\n                    year: \"2006\",\n                    cars: 1630,\n                    motorcycles: 642,\n                    bicycles: 127,\n                },\n                {\n                    year: \"2007\",\n                    cars: 1660,\n                    motorcycles: 699,\n                    bicycles: 105,\n                },\n                {\n                    year: \"2008\",\n                    cars: 1683,\n                    motorcycles: 721,\n                    bicycles: 109,\n                },\n                {\n                    year: \"2009\",\n                    cars: 1691,\n                    motorcycles: 737,\n                    bicycles: 112,\n                },\n                {\n                    year: \"2010\",\n                    cars: 1298,\n                    motorcycles: 680,\n                    bicycles: 101,\n                },\n                {\n                    year: \"2011\",\n                    cars: 1275,\n                    motorcycles: 664,\n                    bicycles: 97,\n                },\n                {\n                    year: \"2012\",\n                    cars: 1246,\n                    motorcycles: 648,\n                    bicycles: 93,\n                },\n                {\n                    year: \"2013\",\n                    cars: 1318,\n                    motorcycles: 697,\n                    bicycles: 111,\n                },\n                {\n                    year: \"2014\",\n                    cars: 1213,\n                    motorcycles: 633,\n                    bicycles: 87,\n                },\n                {\n                    year: \"2015\",\n                    cars: 1199,\n                    motorcycles: 621,\n                    bicycles: 79,\n                },\n                {\n                    year: \"2016\",\n                    cars: 1110,\n                    motorcycles: 210,\n                    bicycles: 81,\n                },\n                {\n                    year: \"2017\",\n                    cars: 1165,\n                    motorcycles: 232,\n                    bicycles: 75,\n                },\n                {\n                    year: \"2018\",\n                    cars: 1145,\n                    motorcycles: 219,\n                    bicycles: 88,\n                },\n                {\n                    year: \"2019\",\n                    cars: 1163,\n                    motorcycles: 201,\n                    bicycles: 82,\n                },\n                {\n                    year: \"2020\",\n                    cars: 1180,\n                    motorcycles: 285,\n                    bicycles: 87,\n                },\n                {\n                    year: \"2021\",\n                    cars: 1159,\n                    motorcycles: 277,\n                    bicycles: 71,\n                },\n            ];\n\n            // Create axes\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n            var xAxis = chart.xAxes.push(\n                am5xy.CategoryAxis.new(root, {\n                    categoryField: \"year\",\n                    startLocation: 0.5,\n                    endLocation: 0.5,\n                    renderer: am5xy.AxisRendererX.new(root, {}),\n                    tooltip: am5.Tooltip.new(root, {}),\n                })\n            );\n\n            xAxis.get(\"renderer\").grid.template.setAll({\n                disabled: true,\n                strokeOpacity: 0\n            });\n\n            xAxis.get(\"renderer\").labels.template.setAll({\n                fontWeight: \"400\",\n                fontSize: 13,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n\n            xAxis.data.setAll(data);\n\n            var yAxis = chart.yAxes.push(\n                am5xy.ValueAxis.new(root, {\n                    renderer: am5xy.AxisRendererY.new(root, {}),\n                })\n            );\n\n            yAxis.get(\"renderer\").grid.template.setAll({\n                stroke: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\n                strokeWidth: 1,\n                strokeOpacity: 1,\n                strokeDasharray: [3]\n            });\n\n            yAxis.get(\"renderer\").labels.template.setAll({\n                fontWeight: \"400\",\n                fontSize: 13,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n\n            // Add series\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n\n            function createSeries(name, field, color) {\n                var series = chart.series.push(\n                    am5xy.LineSeries.new(root, {\n                        name: name,\n                        xAxis: xAxis,\n                        yAxis: yAxis,\n                        stacked: true,\n                        valueYField: field,\n                        categoryXField: \"year\",\n                        fill: am5.color(color),\n                        tooltip: am5.Tooltip.new(root, {\n                            pointerOrientation: \"horizontal\",\n                            labelText: \"[bold]{name}[/]\\n{categoryX}: {valueY}\",\n                        }),\n                    })\n                );\n\n                \n\n                series.fills.template.setAll({\n                    fillOpacity: 0.5,\n                    visible: true,\n                });\n\n                series.data.setAll(data);\n                series.appear(1000);\n            }\n\n            createSeries(\"Cars\", \"cars\", KTUtil.getCssVariableValue('--bs-primary'));\n            createSeries(\"Motorcycles\", \"motorcycles\", KTUtil.getCssVariableValue('--bs-success'));\n            createSeries(\"Bicycles\", \"bicycles\", KTUtil.getCssVariableValue('--bs-warning'));\n\n            // Add scrollbar\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/\n            var scrollbarX = chart.set(\n                \"scrollbarX\",\n                am5.Scrollbar.new(root, {\n                    orientation: \"horizontal\",\n                    marginBottom: 25,\n                    height: 8\n                })\n            );\n\n            // Create axis ranges\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/\n            var rangeDataItem = xAxis.makeDataItem({\n                category: \"2016\",\n                endCategory: \"2021\",\n            });\n\n            var range = xAxis.createAxisRange(rangeDataItem);\n\n            rangeDataItem.get(\"grid\").setAll({\n                stroke: am5.color(KTUtil.getCssVariableValue('--bs-gray-200')),\n                strokeOpacity: 0.5,\n                strokeDasharray: [3],\n            });\n\n            rangeDataItem.get(\"axisFill\").setAll({\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-200')),\n                fillOpacity: 0.1,\n            });\n\n            rangeDataItem.get(\"label\").setAll({\n                inside: true,\n                text: \"Fines increased\",\n                rotation: 90,\n                centerX: am5.p100,\n                centerY: am5.p100,\n                location: 0,\n                paddingBottom: 10,\n                paddingRight: 15,\n            });\n\n            var rangeDataItem2 = xAxis.makeDataItem({\n                category: \"2021\",\n            });\n\n            var range2 = xAxis.createAxisRange(rangeDataItem2);\n\n            rangeDataItem2.get(\"grid\").setAll({\n                stroke: am5.color(KTUtil.getCssVariableValue('--bs-danger')),\n                strokeOpacity: 1,\n                strokeDasharray: [3],\n            });\n\n            rangeDataItem2.get(\"label\").setAll({\n                inside: true,\n                text: \"Fee introduced\",\n                rotation: 90,\n                centerX: am5.p100,\n                centerY: am5.p100,\n                location: 0,\n                paddingBottom: 10,\n                paddingRight: 15,\n            });\n\n            // Make stuff animate on load\n            // https://www.amcharts.com/docs/v5/concepts/animations/\n            chart.appear(1000, 100);\n        }); // end am5.ready()\n    };\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        },\n    };\n})();\n\n// Webpack support\nif (typeof module !== \"undefined\") {\n    module.exports = KTChartsWidget13;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTChartsWidget13.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTChartsWidget14 = (function () {\n    // Private methods\n    var initChart = function () {\n        // Check if amchart library is included\n        if (typeof am5 === \"undefined\") {\n            return;\n        }\n\n        var element = document.getElementById(\"kt_charts_widget_14_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        am5.ready(function () {\n            // Create root element\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n            var root = am5.Root.new(element);\n\n            // Set themes\n            // https://www.amcharts.com/docs/v5/concepts/themes/\n            root.setThemes([am5themes_Animated.new(root)]);\n\n            // Create chart\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/\n            var chart = root.container.children.push(\n                am5radar.RadarChart.new(root, {\n                    panX: false,\n                    panY: false,\n                    wheelX: \"panX\",\n                    wheelY: \"zoomX\",\n                    innerRadius: am5.percent(20),\n                    startAngle: -90,\n                    endAngle: 180,\n                })\n            );\n\n            // Data\n            var data = [\n                {\n                    category: \"Research\",\n                    value: 80,\n                    full: 100,\n                    columnSettings: {\n                        fillOpacity: 1,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-info')),\n                    },\n                },\n                {\n                    category: \"Marketing\",\n                    value: 35,\n                    full: 100,\n                    columnSettings: {\n                        fillOpacity: 1,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-danger')),\n                    },\n                },\n                {\n                    category: \"Distribution\",\n                    value: 92,\n                    full: 100,\n                    columnSettings: {\n                        fillOpacity: 1,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary')),\n                    },\n                },\n                {\n                    category: \"Human Resources\",\n                    value: 68,\n                    full: 100,\n                    columnSettings: {\n                        fillOpacity: 1,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-success')),\n                    },\n                },\n            ];\n\n            // Add cursor\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/#Cursor\n            var cursor = chart.set(\n                \"cursor\",\n                am5radar.RadarCursor.new(root, {\n                    behavior: \"zoomX\",\n                })\n            );\n\n            cursor.lineY.set(\"visible\", false);\n\n            // Create axes and their renderers\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes\n            var xRenderer = am5radar.AxisRendererCircular.new(root, {\n                //minGridDistance: 50\n            });\n\n            xRenderer.labels.template.setAll({\n                radius: 10\n            });\n\n            xRenderer.grid.template.setAll({\n                forceHidden: true,\n            });\n\n            var xAxis = chart.xAxes.push(\n                am5xy.ValueAxis.new(root, {\n                    renderer: xRenderer,\n                    min: 0,\n                    max: 100,\n                    strictMinMax: true,\n                    numberFormat: \"#'%'\",\n                    tooltip: am5.Tooltip.new(root, {}),\n                })\n            );\n\n            var yRenderer = am5radar.AxisRendererRadial.new(root, {\n                minGridDistance: 20,\n            });\n\n            yRenderer.labels.template.setAll({\n                centerX: am5.p100,\n                fontWeight: \"500\",\n                fontSize: 18,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500')),\n                templateField: \"columnSettings\",\n            });\n\n            yRenderer.grid.template.setAll({\n                forceHidden: true,\n            });\n\n            var yAxis = chart.yAxes.push(\n                am5xy.CategoryAxis.new(root, {\n                    categoryField: \"category\",\n                    renderer: yRenderer,\n                })\n            );\n\n            yAxis.data.setAll(data);\n\n            // Create series\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series\n            var series1 = chart.series.push(\n                am5radar.RadarColumnSeries.new(root, {\n                    xAxis: xAxis,\n                    yAxis: yAxis,\n                    clustered: false,\n                    valueXField: \"full\",\n                    categoryYField: \"category\",\n                    fill: root.interfaceColors.get(\"alternativeBackground\"),\n                })\n            );\n\n            series1.columns.template.setAll({\n                width: am5.p100,\n                fillOpacity: 0.08,\n                strokeOpacity: 0,\n                cornerRadius: 20,\n            });\n\n            series1.data.setAll(data);\n\n            var series2 = chart.series.push(\n                am5radar.RadarColumnSeries.new(root, {\n                    xAxis: xAxis,\n                    yAxis: yAxis,\n                    clustered: false,\n                    valueXField: \"value\",\n                    categoryYField: \"category\",\n                })\n            );\n\n            series2.columns.template.setAll({\n                width: am5.p100,\n                strokeOpacity: 0,\n                tooltipText: \"{category}: {valueX}%\",\n                cornerRadius: 20,\n                templateField: \"columnSettings\",\n            });\n\n            series2.data.setAll(data);\n\n            // Animate chart and series in\n            // https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation\n            series1.appear(1000);\n            series2.appear(1000);\n            chart.appear(1000, 100);\n        });\n    };\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        },\n    };\n})();\n\n// Webpack support\nif (typeof module !== \"undefined\") {\n    module.exports = KTChartsWidget14;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTChartsWidget14.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTChartsWidget15 = (function () {\n    // Private methods\n    var initChart = function () {\n        // Check if amchart library is included\n        if (typeof am5 === \"undefined\") {\n            return;\n        }\n\n        var element = document.getElementById(\"kt_charts_widget_15_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        am5.ready(function () {\n            // Create root element\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n            var root = am5.Root.new(element);\n\n            // Set themes\n            // https://www.amcharts.com/docs/v5/concepts/themes/\n            root.setThemes([am5themes_Animated.new(root)]);\n\n            // Create chart\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/\n            var chart = root.container.children.push(\n                am5xy.XYChart.new(root, {\n                    panX: false,\n                    panY: false,\n                    //wheelX: \"panX\",\n                    //wheelY: \"zoomX\",\n                    layout: root.verticalLayout,\n                })\n            );\n\n            // Data\n            var colors = chart.get(\"colors\");\n\n            var data = [\n                {\n                    country: \"US\",\n                    visits: 725,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/united-states.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"UK\",\n                    visits: 625,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/united-kingdom.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"China\",\n                    visits: 602,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/china.svg\",\n                   columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"Japan\",\n                    visits: 509,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/japan.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"Germany\",\n                    visits: 322,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/germany.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"France\",\n                    visits: 214,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/france.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"India\",\n                    visits: 204,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/india.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary')),        \n                    }\n                },\n                {\n                    country: \"Spain\",\n                    visits: 200,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/spain.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"Italy\",\n                    visits: 165,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/italy.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"Russia\",\n                    visits: 152,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/russia.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"Norway\",\n                    visits: 125,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/norway.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"Canada\",\n                    visits: 99,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/canada.svg\",\n                   columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n            ];\n\n            // Create axes\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n            var xAxis = chart.xAxes.push(\n                am5xy.CategoryAxis.new(root, {\n                    categoryField: \"country\",\n                    renderer: am5xy.AxisRendererX.new(root, {\n                        minGridDistance: 30,\n                    }),\n                    bullet: function (root, axis, dataItem) {\n                        return am5xy.AxisBullet.new(root, {\n                            location: 0.5,\n                            sprite: am5.Picture.new(root, {\n                                width: 24,\n                                height: 24,\n                                centerY: am5.p50,\n                                centerX: am5.p50,\n                                src: dataItem.dataContext.icon,\n                            }),\n                        });\n                    },\n                })\n            );\n\n            xAxis.get(\"renderer\").labels.template.setAll({\n                paddingTop: 20,                \n                fontWeight: \"400\",\n                fontSize: 13,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n            \n            xAxis.get(\"renderer\").grid.template.setAll({\n                disabled: true,\n                strokeOpacity: 0\n            });\n\n            xAxis.data.setAll(data);\n\n            var yAxis = chart.yAxes.push(\n                am5xy.ValueAxis.new(root, {\n                    renderer: am5xy.AxisRendererY.new(root, {}),\n                })\n            );\n\n            yAxis.get(\"renderer\").grid.template.setAll({\n                stroke: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\n                strokeWidth: 1,\n                strokeOpacity: 1,\n                strokeDasharray: [3]\n            });\n\n            yAxis.get(\"renderer\").labels.template.setAll({\n                fontWeight: \"400\",\n                fontSize: 13,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n\n            // Add series\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n            var series = chart.series.push(\n                am5xy.ColumnSeries.new(root, {\n                    xAxis: xAxis,\n                    yAxis: yAxis,\n                    valueYField: \"visits\",\n                    categoryXField: \"country\"\n                })\n            );\n\n            series.columns.template.setAll({\n                tooltipText: \"{categoryX}: {valueY}\",\n                tooltipY: 0,\n                strokeOpacity: 0,\n                templateField: \"columnSettings\",\n            });\n\n            series.columns.template.setAll({\n                strokeOpacity: 0,\n                cornerRadiusBR: 0,\n                cornerRadiusTR: 6,\n                cornerRadiusBL: 0,\n                cornerRadiusTL: 6,\n            });\n\n            series.data.setAll(data);\n\n            // Make stuff animate on load\n            // https://www.amcharts.com/docs/v5/concepts/animations/\n            series.appear();\n            chart.appear(1000, 100);\n        });\n    };\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        },\n    };\n})();\n\n// Webpack support\nif (typeof module !== \"undefined\") {\n    module.exports = KTChartsWidget15;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTChartsWidget15.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTChartsWidget16 = (function () {\n    // Private methods\n    var initChart = function () {\n        // Check if amchart library is included\n        if (typeof am5 === \"undefined\") {\n            return;\n        }\n\n        var element = document.getElementById(\"kt_charts_widget_16_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        am5.ready(function () {\n            // Create root element\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n            var root = am5.Root.new(element);\n\n            // Set themes\n            // https://www.amcharts.com/docs/v5/concepts/themes/\n            root.setThemes([am5themes_Animated.new(root)]);\n\n            // Create chart\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/\n            var chart = root.container.children.push(\n                am5xy.XYChart.new(root, {\n                    panX: false,\n                    panY: false,\n                    wheelX: \"panX\",\n                    wheelY: \"zoomX\",\n                    layout: root.verticalLayout,\n                })\n            );\n\n            var colors = chart.get(\"colors\");\n\n            var data = [\n                {\n                    country: \"US\",\n                    visits: 725,\n                },\n                {\n                    country: \"UK\",\n                    visits: 625,\n                },\n                {\n                    country: \"China\",\n                    visits: 602,\n                },\n                {\n                    country: \"Japan\",\n                    visits: 509,\n                },\n                {\n                    country: \"Germany\",\n                    visits: 322,\n                },\n                {\n                    country: \"France\",\n                    visits: 214,\n                },\n                {\n                    country: \"India\",\n                    visits: 204,\n                },\n                {\n                    country: \"Spain\",\n                    visits: 198,\n                },\n                {\n                    country: \"Italy\",\n                    visits: 165,\n                },\n                {\n                    country: \"Russia\",\n                    visits: 130,\n                },\n                {\n                    country: \"Norway\",\n                    visits: 93,\n                },\n                {\n                    country: \"Canada\",\n                    visits: 41,\n                },\n            ];\n\n            prepareParetoData();\n\n            function prepareParetoData() {\n                var total = 0;\n\n                for (var i = 0; i < data.length; i++) {\n                    var value = data[i].visits;\n                    total += value;\n                }\n\n                var sum = 0;\n                for (var i = 0; i < data.length; i++) {\n                    var value = data[i].visits;\n                    sum += value;\n                    data[i].pareto = (sum / total) * 100;\n                }\n            }\n\n            // Create axes\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n            var xAxis = chart.xAxes.push(\n                am5xy.CategoryAxis.new(root, {\n                    categoryField: \"country\",\n                    renderer: am5xy.AxisRendererX.new(root, {\n                        minGridDistance: 30,\n                    }),\n                })\n            );\n\n            xAxis.get(\"renderer\").labels.template.setAll({\n                paddingTop: 10,\n                fontWeight: \"400\",\n                fontSize: 13,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n\n            xAxis.get(\"renderer\").grid.template.setAll({\n                disabled: true,\n                strokeOpacity: 0\n            });\n\n            xAxis.data.setAll(data);\n\n            var yAxis = chart.yAxes.push(\n                am5xy.ValueAxis.new(root, {\n                    renderer: am5xy.AxisRendererY.new(root, {}),\n                })\n            );\n\n            yAxis.get(\"renderer\").labels.template.setAll({\n                paddingLeft: 10,\n                fontWeight: \"400\",\n                fontSize: 13,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n\n            yAxis.get(\"renderer\").grid.template.setAll({\n                stroke: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\n                strokeWidth: 1,\n                strokeOpacity: 1,\n                strokeDasharray: [3]\n            });\n\n            var paretoAxisRenderer = am5xy.AxisRendererY.new(root, {\n                opposite: true,\n            });\n            var paretoAxis = chart.yAxes.push(\n                am5xy.ValueAxis.new(root, {\n                    renderer: paretoAxisRenderer,\n                    min: 0,\n                    max: 100,\n                    strictMinMax: true,\n                })\n            );\n            paretoAxis.get(\"renderer\").labels.template.setAll({\n                fontWeight: \"400\",\n                fontSize: 13,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n\n            paretoAxisRenderer.grid.template.set(\"forceHidden\", true);\n            paretoAxis.set(\"numberFormat\", \"#'%\");\n\n            // Add series\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n            var series = chart.series.push(\n                am5xy.ColumnSeries.new(root, {\n                    xAxis: xAxis,\n                    yAxis: yAxis,\n                    valueYField: \"visits\",\n                    categoryXField: \"country\",\n                })\n            );\n\n            series.columns.template.setAll({\n                tooltipText: \"{categoryX}: {valueY}\",\n                tooltipY: 0,\n                strokeOpacity: 0,\n                cornerRadiusTL: 6,\n                cornerRadiusTR: 6,\n            });\n\n            series.columns.template.adapters.add(\n                \"fill\",\n                function (fill, target) {\n                    return chart\n                        .get(\"colors\")\n                        .getIndex(series.dataItems.indexOf(target.dataItem));\n                }\n            );\n\n            // pareto series\n            var paretoSeries = chart.series.push(\n                am5xy.LineSeries.new(root, {\n                    xAxis: xAxis,\n                    yAxis: paretoAxis,\n                    valueYField: \"pareto\",\n                    categoryXField: \"country\",\n                    stroke: am5.color(KTUtil.getCssVariableValue('--bs-dark')),\n                    maskBullets: false,\n                })\n            );\n\n            paretoSeries.bullets.push(function () {\n                return am5.Bullet.new(root, {\n                    locationY: 1,\n                    sprite: am5.Circle.new(root, {\n                        radius: 5,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary')),\n                        stroke: am5.color(KTUtil.getCssVariableValue('--bs-dark'))\n                    }),\n                });\n            });\n\n            series.data.setAll(data);\n            paretoSeries.data.setAll(data);\n\n            // Make stuff animate on load\n            // https://www.amcharts.com/docs/v5/concepts/animations/\n            series.appear();\n            chart.appear(1000, 100);\n        });\n    };\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        },\n    };\n})();\n\n// Webpack support\nif (typeof module !== \"undefined\") {\n    module.exports = KTChartsWidget16;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTChartsWidget16.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTChartsWidget17 = (function () {\n    // Private methods\n    var initChart = function () {\n        // Check if amchart library is included\n        if (typeof am5 === \"undefined\") {\n            return;\n        }\n\n        var element = document.getElementById(\"kt_charts_widget_17_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        am5.ready(function () {\n            // Create root element\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n            var root = am5.Root.new(element);\n\n            // Set themes\n            // https://www.amcharts.com/docs/v5/concepts/themes/\n            root.setThemes([am5themes_Animated.new(root)]);\n\n            // Create chart\n            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\n            // start and end angle must be set both for chart and series\n            var chart = root.container.children.push(\n                am5percent.PieChart.new(root, {\n                    startAngle: 180,\n                    endAngle: 360,\n                    layout: root.verticalLayout,\n                    innerRadius: am5.percent(50),\n                })\n            );\n\n            // Create series\n            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\n            // start and end angle must be set both for chart and series\n            var series = chart.series.push(\n                am5percent.PieSeries.new(root, {\n                    startAngle: 180,\n                    endAngle: 360,\n                    valueField: \"value\",\n                    categoryField: \"category\",\n                    alignLabels: false,\n                })\n            );\n\n            series.labels.template.setAll({\n                fontWeight: \"400\",\n                fontSize: 13,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n\n            series.states.create(\"hidden\", {\n                startAngle: 180,\n                endAngle: 180,\n            });\n\n            series.slices.template.setAll({\n                cornerRadius: 5,\n            });\n\n            series.ticks.template.setAll({\n                forceHidden: true,\n            });\n\n            // Set data\n            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data\n            series.data.setAll([\n                { value: 10, category: \"One\", fill: am5.color(KTUtil.getCssVariableValue('--bs-primary')) },\n                { value: 9, category: \"Two\", fill: am5.color(KTUtil.getCssVariableValue('--bs-success')) },\n                { value: 6, category: \"Three\", fill: am5.color(KTUtil.getCssVariableValue('--bs-danger')) },\n                { value: 5, category: \"Four\", fill: am5.color(KTUtil.getCssVariableValue('--bs-warning')) },\n                { value: 4, category: \"Five\", fill: am5.color(KTUtil.getCssVariableValue('--bs-info')) },\n                { value: 3, category: \"Six\", fill: am5.color(KTUtil.getCssVariableValue('--bs-secondary')) }\n            ]);\n\n            series.appear(1000, 100);\n        });\n    };\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        },\n    };\n})();\n\n// Webpack support\nif (typeof module !== \"undefined\") {\n    module.exports = KTChartsWidget17;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTChartsWidget17.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTChartsWidget18 = function () {\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_18_chart\");\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-900');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');    \n\n        var options = {\n            series: [{\n                name: 'Net Profit',\n                data: [54, 42, 75, 110, 23, 87, 50]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: height,\n                toolbar: {\n                    show: false\n                }              \n            },\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                    columnWidth: ['28%'],\n                    borderRadius: 5,                     \n                    dataLabels: {\n                        position: \"top\" // top, center, bottom\n                    },\n                    startingShape: 'flat'\n                },\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: true, \n                offsetY: -28,                                             \n                style: {\n                    fontSize: '13px',\n                    colors: [labelColor]\n                }                         \n            },\n            stroke: {\n                show: true,\n                width: 2,\n                colors: ['transparent']\n            },\n            xaxis: {\n                categories: ['QA Analysis', 'Marketing', 'Web Dev', 'Maths', 'Front-end Dev', 'Physics', 'Phylosophy'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    }                    \n                },\n                crosshairs: {\n                    fill: {         \n                        gradient: {         \n                            opacityFrom: 0,\n                            opacityTo: 0\n                        }\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    },\n                    formatter: function (val) {\n                        return parseInt(val) + \"H\"\n                    }\n                }\n            },\n            fill: {\n                opacity: 1\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \" thousands\"\n                    }\n                }\n            },\n            colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-light-primary')],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            }\n        };\n\n        var chart = new ApexCharts(element, options);  \n        \n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.render();   \n        }, 200); \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }        \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTChartsWidget18;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTChartsWidget18.init();\n});\n\n\n ","\"use strict\";\n\n// Class definition\nvar KTChartsWidget2 = function () {\n    // Private methods\n    var initChart = function() {\n        var element = document.querySelectorAll('.charts-widget-2');\n\n        [].slice.call(element).map(function(element) {\n            var height = parseInt(KTUtil.css(element, 'height'));\n\n            if ( !element ) {\n                return;\n            }\n\n            var color = element.getAttribute('data-kt-chart-color');\n\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-800');\n            var strokeColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n            var lightColor = KTUtil.getCssVariableValue('--bs-light-' + color );\n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [15, 15, 45, 45, 25, 25, 55, 55, 20, 20, 37]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'area',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    },\n                    zoom: {\n                        enabled: false\n                    },\n                    sparkline: {\n                        enabled: true\n                    }\n                },\n                plotOptions: {},\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                fill: {\n                    type: 'solid',\n                    opacity: 1\n                },\n                stroke: {\n                    curve: 'smooth',\n                    show: true,\n                    width: 3,\n                    colors: [baseColor]\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    },\n                    crosshairs: {\n                        show: false,\n                        position: 'front',\n                        stroke: {\n                            color: strokeColor,\n                            width: 1,\n                            dashArray: 3\n                        }\n                    },\n                    tooltip: {\n                        enabled: true,\n                        formatter: undefined,\n                        offsetY: 0,\n                        style: {\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    min: 0,\n                    max: 60,\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [lightColor],\n                markers: {\n                    colors: [lightColor],\n                    strokeColor: [baseColor],\n                    strokeWidth: 3\n                }\n            }; \n            \n            var chart = new ApexCharts(element, options);\n\n            // Set timeout to properly get the parent elements width\n            setTimeout(function() {\n                chart.render();   \n            }, 200);  \n        });           \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTChartsWidget2;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTChartsWidget2.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTChartsWidget3 = function () {\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_3\");\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-success');\n        var lightColor = KTUtil.getCssVariableValue('--bs-success');\n\n        var options = {\n            series: [{\n                name: 'Sales',\n                data: [18, 18, 20, 20, 18, 18, 22, 22, 20, 20, 18, 18, 20, 20, 18, 18, 20, 20, 22]\n            }],            \n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.4,\n                    opacityTo: 0,\n                    stops: [0, 80, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 15', 'Apr 16', 'Apr 17', 'Apr 18', ''],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                tickAmount: 6,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: true,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                tickAmount: 4,\n                max: 24,\n                min: 10,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    },\n                    formatter: function (val) {\n                        return '$' + Number(val / 10).toFixed(1) + \"K\"\n                    }\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \"K\"\n                    }\n                }\n            },\n            colors: [lightColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        var chart = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.render();   \n        }, 200);     \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTChartsWidget3;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTChartsWidget3.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTChartsWidget4 = function () {\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_4\");\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-primary');\n        var lightColor = KTUtil.getCssVariableValue('--bs-primary');\n\n        var options = {\n            series: [{\n                name: 'Discounted',\n                data: [34.5,34.5,35,35,35.5,35.5,35,35,34.5,34.5,34.5,34.5,35,35,34.5,35.5,35.5,35.5,35]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.4,\n                    opacityTo: 0,\n                    stops: [0, 80, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 19', 'Apr 21', ''],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                tickAmount: 6,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: true,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                max: 36.3,\n                min: 33,\n                tickAmount: 6,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    },\n                    formatter: function (val) {\n                        return '$' + parseInt(10 * val)\n                    }\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return '$' + parseInt(10 * val)\n                    }\n                }\n            },\n            colors: [lightColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        var chart = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.render();\n        }, 200);           \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTChartsWidget4;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTChartsWidget4.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTChartsWidget5 = function () {\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_5\"); \n\n        if (!element) {\n            return;\n        }\n        \n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        \n        var options = {\n            series: [{\n                data: [15, 12, 10, 8, 7, 4, 3],\n                show: false                                                                              \n            }],\n            chart: {\n                type: 'bar',\n                height: 350,\n                toolbar: {\n                    show: false\n                }                             \n            },                    \n            plotOptions: {\n                bar: {\n                    borderRadius: 4,\n                    horizontal: true,\n                    distributed: true,\n                    barHeight: 23                   \n                }\n            },\n            dataLabels: {\n                enabled: false                               \n            },             \n            legend: {\n                show: false\n            },                               \n            colors: ['#3E97FF', '#F1416C', '#50CD89', '#FFC700', '#7239EA', '#50CDCD', '#3F4254'],                                                                      \n            xaxis: {\n                categories: ['Phones', 'Laptops', 'Headsets', 'Games', 'Keyboardsy', 'Monitors', 'Speakers'],\n                labels: {\n                    formatter: function (val) {\n                      return val + \"K\"\n                    },\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-400'),\n                        fontSize: '14px',\n                        fontWeight: '600',\n                        align: 'left'                                              \n                    }                  \n                },\n                axisBorder: {\n\t\t\t\t\tshow: false\n\t\t\t\t}                         \n            },\n            yaxis: {\n                labels: {                   \n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-800'),\n                        fontSize: '14px',\n                        fontWeight: '600'                                                                 \n                    },\n                    offsetY: 2,\n                    align: 'left' \n                }              \n            },\n            grid: {                \n                borderColor: borderColor,                \n                xaxis: {\n                    lines: {\n                        show: true\n                    }\n                },   \n                yaxis: {\n                    lines: {\n                        show: false  \n                    }\n                },\n                strokeDashArray: 4              \n            }                                 \n        };  \n          \n        var chart = new ApexCharts(element, options);\n        \n        setTimeout(function() {\n            chart.render();   \n        }, 200); \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTChartsWidget5;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTChartsWidget5.init();\n});\n\n\n ","\"use strict\";\n\n// Class definition\nvar KTChartsWidget6 = function () {\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_6\"); \n\n        if (!element) {\n            return;\n        }\n        \n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-800');    \n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var maxValue = 18;\n        \n        var options = {\n            series: [{\n                name: 'Sales',\n                data: [15, 12, 10, 8, 7]                                                                                                             \n            }],           \n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: 350,\n                toolbar: {\n                    show: false\n                }                             \n            },                    \n            plotOptions: {\n                bar: {\n                    borderRadius: 8,\n                    horizontal: true,\n                    distributed: true,\n                    barHeight: 50,\n                    dataLabels: {\n\t\t\t\t        position: 'bottom' // use 'bottom' for left and 'top' for right align(textAnchor)\n\t\t\t        }                                                       \n                }\n            },\n            dataLabels: {  // Docs: https://apexcharts.com/docs/options/datalabels/\n                enabled: true,              \n                textAnchor: 'start',  \n                offsetX: 0,                 \n                formatter: function (val, opts) {\n                    var val = val * 1000;\n                    var Format = wNumb({\n                        //prefix: '$',\n                        //suffix: ',-',\n                        thousand: ','\n                    });\n\n                    return Format.to(val);\n                },\n                style: {\n                    fontSize: '14px',\n                    fontWeight: '600',\n                    align: 'left',                                                            \n                }                                       \n            },             \n            legend: {\n                show: false\n            },                               \n            colors: ['#3E97FF', '#F1416C', '#50CD89', '#FFC700', '#7239EA'],                                                                      \n            xaxis: {\n                categories: [\"ECR - 90%\", \"FGI - 82%\", 'EOQ - 75%', 'FMG - 60%', 'PLG - 50%'],\n                labels: {\n                    formatter: function (val) {\n                        return val + \"K\"\n                    },\n                    style: {\n                        colors: labelColor,\n                        fontSize: '14px',\n                        fontWeight: '600',\n                        align: 'left'                                              \n                    }                  \n                },\n                axisBorder: {\n\t\t\t\t\tshow: false\n\t\t\t\t}                         \n            },\n            yaxis: {\n                labels: {       \n                    formatter: function (val, opt) {\n                        if (Number.isInteger(val)) {\n                            var percentage = parseInt(val * 100 / maxValue) . toString(); \n                            return val + ' - ' + percentage + '%';\n                        } else {\n                            return val;\n                        }\n                    },            \n                    style: {\n                        colors: labelColor,\n                        fontSize: '14px',\n                        fontWeight: '600'                                                                 \n                    },\n                    offsetY: 2,\n                    align: 'left' \n                }           \n            },\n            grid: {                \n                borderColor: borderColor,                \n                xaxis: {\n                    lines: {\n                        show: true\n                    }\n                },   \n                yaxis: {\n                    lines: {\n                        show: false  \n                    }\n                },\n                strokeDashArray: 4              \n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return val + 'K';\n                    }\n                }\n            }                                 \n        };  \n          \n        var chart = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.render();   \n        }, 200);        \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTChartsWidget6;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTChartsWidget6.init();\n});\n\n\n ","\"use strict\";\n\n// Class definition\nvar KTChartsWidget7 = function () {\n    // Private methods\n    var initChart = function(chartSelector) {\n        var element = document.querySelector(chartSelector);\n\n        if (!element) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n\n        var options = {\n            series: [{\n                name: 'Net Profit',\n                data: data1\n            }, {\n                name: 'Revenue',\n                data: data2\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                    columnWidth: ['40%'],\n                    borderRadius: [6]\n                },\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            stroke: {\n                show: true,\n                width: 2,\n                colors: ['transparent']\n            },\n            xaxis: {\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-700'),\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-700'),\n                        fontSize: '12px'\n                    }\n                }\n            },\n            fill: {\n                opacity: 1\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \" thousands\"\n                    }\n                }\n            },\n            colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-light-primary')],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            }\n        };\n\n        var chart = new ApexCharts(element, options);\n\n        var init = false;\n        var tab = document.querySelector(tabSelector);\n        \n        if (initByDefault === true) {\n            chart.render();\n            init = true;\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (init == false) {\n                chart.render();\n                init = true;\n            }\n        })\n          \n        var chart = new ApexCharts(element, options);\n        chart.render();   \n    }\n\n    // Public methods\n    return {\n        init: function () {          \n            initChart('#kt_chart_widget_7_tab_1', '#kt_chart_widget_7_chart_1', [44, 55, 57, 56, 61, 58], [76, 85, 101, 98, 87, 105], true);\n            initChart('#kt_chart_widget_7_tab_2', '#kt_chart_widget_7_chart_2', [35, 60, 35, 50, 45, 30], [65, 80, 50, 80, 75, 105], false);\n            initChart('#kt_chart_widget_7_tab_3', '#kt_chart_widget_7_chart_3', [25, 40, 45, 50, 40, 60], [76, 85, 101, 98, 87, 105], false);\n            initChart('#kt_chart_widget_7_tab_4', '#kt_chart_widget_7_chart_4', [50, 35, 45, 55, 30, 40], [76, 85, 101, 98, 87, 105], false);             \n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTChartsWidget7;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    //KTChartsWidget7.init();\n});\n\n\n ","\"use strict\";\n\n// Class definition\nvar KTChartsWidget8 = function () {\n    // Private methods\n    var initChart = function(toggle, selector, data, initByDefault) {\n        var element = document.querySelector(selector);\n\n        if (!element) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));    \n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');    \n\n        var options = {\n            series: [\n                {\n                    name: 'Social Campaigns',\n                    data: data[0]  // array value is of the format [x, y, z] where x (timestamp) and y are the two axes coordinates,\n                }, {\n                    name: 'Email Newsletter',\n                    data: data[1]\n                }, {\n                    name: 'TV Campaign',\n                    data: data[2]\n                }, {\n                    name: 'Google Ads',\n                    data: data[3]\n                }, {\n                    name: 'Courses',\n                    data: data[4]\n                }, {\n                    name: 'Radio',\n                    data: data[5]\n                }                \n            ],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bubble',    \n                height: height,\n                toolbar: {\n                    show: false\n                }                         \n            },                                 \n            plotOptions: {\n                bubble: {\n                }\n            },\n            stroke: {\n                show: false,\n                width: 0\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            xaxis: {\n                type: 'numeric',             \n                tickAmount: 7,\n                min: 0,\n                max: 700,\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: true,\n                    height: 0,\n                },\n                labels: {\n                    show: true,\n                    trim: true,\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    }\n                }\n            },\n            yaxis: {\n                tickAmount: 7,\n                min: 0,\n                max: 700,\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    }\n                }               \n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                x: {\n                    formatter: function (val) {\n                        return \"Clicks: \" + val;\n                    }\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \"K\"\n                    }\n                },\n                z: {\n                    title: 'Impression: '\n                }\n            },\n            crosshairs: {\n                show: true,\n                position: 'front',\n                stroke: {\n                    color: KTUtil.getCssVariableValue('--bs-border-dashed-color'),\n                    width: 1,\n                    dashArray: 0,\n                }\n            },           \n            colors: [\n                KTUtil.getCssVariableValue('--bs-primary'),\n                KTUtil.getCssVariableValue('--bs-success'),   \n                KTUtil.getCssVariableValue('--bs-warning'),\n                KTUtil.getCssVariableValue('--bs-danger'),\n                KTUtil.getCssVariableValue('--bs-info'),\n                '#43CED7'\n            ],\n            fill: {\n                opacity: 1,                \n            },\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                padding: {\n                    right: 20\n                },\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            }\n        };\n\n        var initialized = false;\n        var chart = new ApexCharts(element, options);        \n        var tab = document.querySelector(toggle);\n        \n        if (initByDefault === true) {\n            // Set timeout to properly get the parent elements width\n            setTimeout(function() {\n                chart.render();  \n                initialized = true;\n            }, 200);\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (initialized === false) {\n                chart.render();\n                initialized = true;\n            }\n        })        \n    }\n\n    // Public methods\n    return {\n        init: function () {    \n            var data1 = [\n                [[100, 250, 30]], [[225, 300, 35]], [[300, 350, 25]], [[350, 350, 20]], [[450, 400, 25]], [[550, 350, 35]]\n            ];\n\n            var data2 = [\n                [[125, 300, 40]], [[250, 350, 35]], [[350, 450, 30]], [[450, 250, 25]], [[500, 500, 30]], [[600, 250, 28]]\n            ];\n\n            initChart('#kt_chart_widget_8_week_toggle', '#kt_chart_widget_8_week_chart', data1, false);\n            initChart('#kt_chart_widget_8_month_toggle', '#kt_chart_widget_8_month_chart', data2, true);    \n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTChartsWidget8;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTChartsWidget8.init();\n});\n\n\n ","\"use strict\";\n\n// Class definition\nvar KTChartsWidget9 = function () {\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_9\");\n\n        if (!element) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-400');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');    \n\n        var baseColor = KTUtil.getCssVariableValue('--bs-gray-200');\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-primary');\n\n\n        var options = {\n            series: [{\n                name: 'Net Profit',\n                data: [21, 21, 26, 26, 31, 31, 27]\n            }, {\n                name: 'Revenue',\n                data: [12, 16, 16, 21, 21, 18, 18]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {},\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: 'solid',\n                opacity: 1\n            },\n            stroke: {\n                curve: 'smooth'\n            },\n            xaxis: {\n                categories: ['', '06 Sep', '13 Sep', '20 Sep', '27 Sep', '30 Sep', ''],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: labelColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \" thousands\"\n                    }\n                }\n            },\n            crosshairs: {\n                show: true,\n                position: 'front',\n                stroke: {\n                    color: KTUtil.getCssVariableValue('--bs-border-dashed-color'),\n                    width: 1,\n                    dashArray: 0,\n                },\n            },\n            colors: [baseColor, secondaryColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                colors: [baseColor, secondaryColor],\n                strokeColor: [KTUtil.getCssVariableValue('--bs-danger'), KTUtil.getCssVariableValue('--bs-warning')],\n                strokeWidth: 3\n            }\n        };        \n          \n        var chart = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.render();   \n        }, 200);        \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTChartsWidget9;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTChartsWidget9.init();\n});\n\n\n ","\"use strict\";\n\n// Class definition\nvar KTMapsWidget1 = (function () {\n    // Private methods\n    var initMap = function () {\n        // Check if amchart library is included\n        if (typeof am5 === 'undefined') {\n            return;\n        }\n\n        var element = document.getElementById(\"kt_maps_widget_1_map\");\n\n        if (!element) {\n            return;\n        }\n\n        // On amchart ready\n        am5.ready(function () {\n            // Create root element\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n            var root = am5.Root.new(element);\n\n            // Set themes\n            // https://www.amcharts.com/docs/v5/concepts/themes/\n            root.setThemes([am5themes_Animated.new(root)]);\n\n            // Create the map chart\n            // https://www.amcharts.com/docs/v5/charts/map-chart/\n            var chart = root.container.children.push(\n                am5map.MapChart.new(root, {\n                    panX: \"translateX\",\n                    panY: \"translateY\",\n                    projection: am5map.geoMercator(),\n\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\tpaddingrIGHT: 0,\n\t\t\t\t\tpaddingBottom: 0\n                })\n            );\n\n            // Create main polygon series for countries\n            // https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/\n            var polygonSeries = chart.series.push(\n                am5map.MapPolygonSeries.new(root, {\n                    geoJSON: am5geodata_worldLow,\n                    exclude: [\"AQ\"],\n                })\n            );\n\n            polygonSeries.mapPolygons.template.setAll({\n                tooltipText: \"{name}\",\n                toggleKey: \"active\",\n                interactive: true,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\n            });\n\n            polygonSeries.mapPolygons.template.states.create(\"hover\", {\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-success')),\n            });\n\n            polygonSeries.mapPolygons.template.states.create(\"active\", {\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-success')),\n            });\n\n            // Highlighted Series\n            // Create main polygon series for countries\n            // https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/\n            var polygonSeriesHighlighted = chart.series.push(\n                am5map.MapPolygonSeries.new(root, {\n                    //geoJSON: am5geodata_usaLow,\n\t\t\t\t\tgeoJSON: am5geodata_worldLow,\n\t\t\t\t\tinclude: ['US', 'BR', 'RU']\n                })\n            );\n\n            polygonSeriesHighlighted.mapPolygons.template.setAll({\n                tooltipText: \"{name}\",\n                toggleKey: \"active\",\n                interactive: true,\n            });\n\n            var colors = am5.ColorSet.new(root, {});\n\n            polygonSeriesHighlighted.mapPolygons.template.set(\n                \"fill\",\n\t\t\t\tam5.color(KTUtil.getCssVariableValue('--bs-primary')),\n            );\n\n            polygonSeriesHighlighted.mapPolygons.template.states.create(\"hover\", {\n                fill: root.interfaceColors.get(\"primaryButtonHover\"),\n            });\n\n            polygonSeriesHighlighted.mapPolygons.template.states.create(\"active\", {\n                fill: root.interfaceColors.get(\"primaryButtonHover\"),\n            });\n\n            // Add zoom control\n            // https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zoom_control\n            //chart.set(\"zoomControl\", am5map.ZoomControl.new(root, {}));\n\n            // Set clicking on \"water\" to zoom out\n            chart.chartContainer\n                .get(\"background\")\n                .events.on(\"click\", function () {\n                    chart.goHome();\n                });\n\n            // Make stuff animate on load\n            chart.appear(1000, 100);\n        }); // end am5.ready()\n    };\n\n    // Public methods\n    return {\n        init: function () {\n            initMap();\n        },\n    };\n})();\n\n// Webpack support\nif (typeof module !== \"undefined\") {\n    module.exports = KTMapsWidget1;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTMapsWidget1.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTSlidersWidget1 = function() {\n    // Private methods\n    var initChart = function(query, data) {\n        var element = document.querySelector(query);\n\n        if ( !element) {\n            return;\n        }              \n        \n        if ( element.classList.contains(\"initialized\") ) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var baseColor = KTUtil.getCssVariableValue('--bs-' + 'primary');\n        var lightColor = KTUtil.getCssVariableValue('--bs-light-' + 'primary' );         \n\n        var options = {\n            series: [data],\n            chart: {\n                fontFamily: 'inherit',\n                height: height,\n                type: 'radialBar',\n                sparkline: {\n                    enabled: true,\n                }\n            },\n            plotOptions: {\n                radialBar: {\n                    hollow: {\n                        margin: 0,\n                        size: \"45%\"\n                    },\n                    dataLabels: {\n                        showOn: \"always\",\n                        name: {\n                            show: false                                 \n                        },\n                        value: {                                 \n                            show: false                              \n                        }\n                    },\n                    track: {\n                        background: lightColor,\n                        strokeWidth: '100%'\n                    }\n                }\n            },\n            colors: [baseColor],\n            stroke: {\n                lineCap: \"round\",\n            },\n            labels: [\"Progress\"]\n        };\n\n        var chart = new ApexCharts(element, options);\n        chart.render();\n        element.classList.add('initialized');\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            // Init default chart\n            initChart('#kt_slider_widget_1_chart_1', 76);\n\n            var carousel = document.querySelector('#kt_sliders_widget_1_slider');\n            if(!carousel){\n                return;\n            }\n            carousel.addEventListener('slid.bs.carousel', function (e) {\n                if (e.to === 1) {\n                    // Init second chart\n                    initChart('#kt_slider_widget_1_chart_2', 55);\n                }\n\n                if (e.to === 2) {\n                    // Init third chart\n                    initChart('#kt_slider_widget_1_chart_3', 25);\n                }\n            });\n        }   \n    }        \n}();\n\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTSlidersWidget1;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTSlidersWidget1.init();\n});\n   \n        \n        \n        \n           ","\"use strict\";\n\n// Class definition\nvar KTSlidersWidget3 = function () {\n    // Private methods\n    var initChart = function(query, data) {\n        var element = document.querySelector(query);\n\n        if (!element) {\n            return;\n        }\n        \n        if ( element.classList.contains(\"initialized\") ) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-danger');\n        var lightColor = KTUtil.getCssVariableValue('--bs-danger');\n\n        var options = {\n            series: [{\n                name: 'Sales',\n                data: data\n            }],            \n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                shadeIntensity: 1,\n                opacityFrom: 0.3,\n                opacityTo: 0.7,\n                stops: [0, 90, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 11', 'Apr 12', 'Apr 14', 'Apr 15', 'Apr 16', 'Apr 17', 'Apr 18', ''],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                tickAmount: 6,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: true,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                tickAmount: 4,\n                max: 24,\n                min: 10,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    } \n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                } \n            },\n            colors: [lightColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        var chart = new ApexCharts(element, options);\n        chart.render();\n        element.classList.add('initialized');   \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            // Init default chart\n            initChart('#kt_slider_widget_3_chart_1', [18, 22, 22, 20, 20, 18, 18, 20, 20, 18, 18, 20, 20, 22]);\n\n            var carousel = document.querySelector('#kt_sliders_widget_3_slider');\n            if(!carousel){\n                return;\n            }\n            carousel.addEventListener('slid.bs.carousel', function (e) {\n                if (e.to === 1) {\n                    // Init second chart\n                    initChart('#kt_slider_widget_3_chart_2', [18, 22, 22, 20, 20, 18, 18, 20, 20, 18, 18, 20, 20, 22]);\n                }                \n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTSlidersWidget3;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTSlidersWidget3.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTTablesWidget3 = function () {\n    var table;\n    var datatable;\n\n    // Private methods\n    const initDatatable = () => {\n        // Init datatable --- more info on datatables: https://datatables.net/manual/\n        datatable = $(table).DataTable({\n            \"info\": false,\n            'order': [],\n            'paging': false,\n            'pageLength': false,\n        });\n    }\n\n    const handleTabStates = () => {\n        const tabs = document.querySelector('[data-kt-table-widget-3=\"tabs_nav\"]');\n        const tabButtons = tabs.querySelectorAll('[data-kt-table-widget-3=\"tab\"]');\n        const tabClasses = ['border-bottom', 'border-3', 'border-primary'];\n\n        tabButtons.forEach(tab => {\n            tab.addEventListener('click', e => {\n                // Get datatable filter value\n                const value = tab.getAttribute('data-kt-table-widget-3-value');\n                tabButtons.forEach(t => {\n                    t.classList.remove(...tabClasses);\n                    t.classList.add('text-muted');\n                });\n\n                tab.classList.remove('text-muted');\n                tab.classList.add(...tabClasses);\n\n                // Filter datatable\n                if (value === 'Show All') {\n                    datatable.search('').draw();\n                } else {\n                    datatable.search(value).draw();\n                }\n            });\n        });\n    }\n\n    // Handle status filter dropdown\n    const handleStatusFilter = () => {\n        const select = document.querySelector('[data-kt-table-widget-3=\"filter_status\"]');\n\n        $(select).on('select2:select', function (e) {\n            const value = $(this).val();\n            if (value === 'Show All') {\n                datatable.search('').draw();\n            } else {\n                datatable.search(value).draw();\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            table = document.querySelector('#kt_widget_table_3');\n\n            if (!table) {\n                return;\n            }\n\n            initDatatable();\n            handleTabStates();\n            handleStatusFilter();\n        }\n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTTablesWidget3;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTTablesWidget3.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTTablesWidget4 = function () {\n    var table;\n    var datatable;\n    var template;\n\n    // Private methods\n    const initDatatable = () => {\n        // Set date data order\n        const tableRows = table.querySelectorAll('tbody tr');\n\n        tableRows.forEach(row => {\n            const dateRow = row.querySelectorAll('td');\n            const realDate = moment(dateRow[1].innerHTML, \"DD MMM YYYY, LT\").format(); // select date from 2nd column in table\n\n            // Skip template\n            if (!row.closest('[data-kt-table-widget-4=\"subtable_template\"]')) {\n                dateRow[1].setAttribute('data-order', realDate);\n                dateRow[1].innerText = moment(realDate).fromNow();\n            }\n        });\n\n        // Get subtable template\n        const subtable = document.querySelector('[data-kt-table-widget-4=\"subtable_template\"]');\n        template = subtable.cloneNode(true);\n        template.classList.remove('d-none');\n\n        // Remove subtable template\n        subtable.parentNode.removeChild(subtable);\n\n        // Init datatable --- more info on datatables: https://datatables.net/manual/\n        datatable = $(table).DataTable({\n            \"info\": false,\n            'order': [],\n            \"lengthChange\": false,\n            'pageLength': 6,\n            'ordering': false,\n            'paging': false,\n            'columnDefs': [\n                { orderable: false, targets: 0 }, // Disable ordering on column 0 (checkbox)\n                { orderable: false, targets: 6 }, // Disable ordering on column 6 (actions)\n            ]\n        });\n\n        // Re-init functions on every table re-draw -- more info: https://datatables.net/reference/event/draw\n        datatable.on('draw', function () {\n            resetSubtable();\n            handleActionButton();\n        });\n    }\n\n    // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\n    var handleSearchDatatable = () => {\n        const filterSearch = document.querySelector('[data-kt-table-widget-4=\"search\"]');\n        filterSearch.addEventListener('keyup', function (e) {\n            datatable.search(e.target.value).draw();\n        });\n    }\n\n    // Handle status filter\n    const handleStatusFilter = () => {\n        const select = document.querySelector('[data-kt-table-widget-4=\"filter_status\"]');\n\n        $(select).on('select2:select', function (e) {\n            const value = $(this).val();\n            if (value === 'Show All') {\n                datatable.search('').draw();\n            } else {\n                datatable.search(value).draw();\n            }\n        });\n    }\n\n    // Subtable data sample\n    const data = [\n        {\n            image: '76',\n            name: 'Go Pro 8',\n            description: 'Latest  version of Go Pro.',\n            cost: '500.00',\n            qty: '1',\n            total: '500.00',\n            stock: '12'\n        },\n        {\n            image: '60',\n            name: 'Bose Earbuds',\n            description: 'Top quality earbuds from Bose.',\n            cost: '300.00',\n            qty: '1',\n            total: '300.00',\n            stock: '8'\n        },\n        {\n            image: '211',\n            name: 'Dry-fit Sports T-shirt',\n            description: 'Comfortable sportswear.',\n            cost: '89.00',\n            qty: '1',\n            total: '89.00',\n            stock: '18'\n        },\n        {\n            image: '21',\n            name: 'Apple Airpod 3',\n            description: 'Apple\\'s latest earbuds.',\n            cost: '200.00',\n            qty: '2',\n            total: '400.00',\n            stock: '32'\n        },\n        {\n            image: '83',\n            name: 'Nike Pumps',\n            description: 'Apple\\'s latest headphones.',\n            cost: '200.00',\n            qty: '1',\n            total: '200.00',\n            stock: '8'\n        }\n    ];\n\n    // Handle action button\n    const handleActionButton = () => {\n        const buttons = document.querySelectorAll('[data-kt-table-widget-4=\"expand_row\"]');\n\n        // Sample row items counter --- for demo purpose only, remove this variable in your project\n        const rowItems = [3, 1, 3, 1, 2, 1];\n\n        buttons.forEach((button, index) => {\n            button.addEventListener('click', e => {\n                e.stopImmediatePropagation();\n                e.preventDefault();\n\n                const row = button.closest('tr');\n                const rowClasses = ['isOpen', 'border-bottom-0'];\n\n                // Get total number of items to generate --- for demo purpose only, remove this code snippet in your project\n                const demoData = [];\n                for (var j = 0; j < rowItems[index]; j++) {\n                    demoData.push(data[j]);\n                }\n                // End of generating demo data\n\n                // Handle subtable expanded state\n                if (row.classList.contains('isOpen')) {\n                    // Remove all subtables from current order row\n                    while (row.nextSibling && row.nextSibling.getAttribute('data-kt-table-widget-4') === 'subtable_template') {\n                        row.nextSibling.parentNode.removeChild(row.nextSibling);\n                    }\n                    row.classList.remove(...rowClasses);\n                    button.classList.remove('active');\n                } else {\n                    populateTemplate(demoData, row);\n                    row.classList.add(...rowClasses);\n                    button.classList.add('active');\n                }\n            });\n        });\n    }\n\n    // Populate template with content/data -- content/data can be replaced with relevant data from database or API\n    const populateTemplate = (data, target) => {\n        data.forEach((d, index) => {\n            // Clone template node\n            const newTemplate = template.cloneNode(true);\n\n            // Stock badges\n            const lowStock = `<div class=\"badge badge-light-warning\">Low Stock</div>`;\n            const inStock = `<div class=\"badge badge-light-success\">In Stock</div>`;\n\n            // Select data elements\n            const image = newTemplate.querySelector('[data-kt-table-widget-4=\"template_image\"]');\n            const name = newTemplate.querySelector('[data-kt-table-widget-4=\"template_name\"]');\n            const description = newTemplate.querySelector('[data-kt-table-widget-4=\"template_description\"]');\n            const cost = newTemplate.querySelector('[data-kt-table-widget-4=\"template_cost\"]');\n            const qty = newTemplate.querySelector('[data-kt-table-widget-4=\"template_qty\"]');\n            const total = newTemplate.querySelector('[data-kt-table-widget-4=\"template_total\"]');\n            const stock = newTemplate.querySelector('[data-kt-table-widget-4=\"template_stock\"]');\n\n            // Populate elements with data\n            const imageSrc = image.getAttribute('data-kt-src-path');\n            image.setAttribute('src', imageSrc + d.image + '.gif');\n            name.innerText = d.name;\n            description.innerText = d.description;\n            cost.innerText = d.cost;\n            qty.innerText = d.qty;\n            total.innerText = d.total;\n            if (d.stock > 10) {\n                stock.innerHTML = inStock;\n            } else {\n                stock.innerHTML = lowStock;\n            }\n\n            // New template border controller\n            // When only 1 row is available\n            if (data.length === 1) {\n                //let borderClasses = ['rounded', 'rounded-end-0'];\n                //newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\n                //borderClasses = ['rounded', 'rounded-start-0'];\n                //newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\n\n                // Remove bottom border\n                //newTemplate.classList.add('border-bottom-0');\n            } else {\n                // When multiple rows detected\n                if (index === (data.length - 1)) { // first row\n                    //let borderClasses = ['rounded-start', 'rounded-bottom-0'];\n                   // newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\n                    //borderClasses = ['rounded-end', 'rounded-bottom-0'];\n                    //newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\n                }\n                if (index === 0) { // last row\n                    //let borderClasses = ['rounded-start', 'rounded-top-0'];\n                    //newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\n                    //borderClasses = ['rounded-end', 'rounded-top-0'];\n                    //newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\n\n                    // Remove bottom border on last row\n                    //newTemplate.classList.add('border-bottom-0');\n                }\n            }\n\n            // Insert new template into table\n            const tbody = table.querySelector('tbody');\n            tbody.insertBefore(newTemplate, target.nextSibling);\n        });\n    }\n\n    // Reset subtable\n    const resetSubtable = () => {\n        const subtables = document.querySelectorAll('[data-kt-table-widget-4=\"subtable_template\"]');\n        subtables.forEach(st => {\n            st.parentNode.removeChild(st);\n        });\n\n        const rows = table.querySelectorAll('tbody tr');\n        rows.forEach(r => {\n            r.classList.remove('isOpen');\n            if (r.querySelector('[data-kt-table-widget-4=\"expand_row\"]')) {\n                r.querySelector('[data-kt-table-widget-4=\"expand_row\"]').classList.remove('active');\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            table = document.querySelector('#kt_table_widget_4_table');\n\n            if (!table) {\n                return;\n            }\n\n            initDatatable();\n            handleSearchDatatable();\n            handleStatusFilter();\n            handleActionButton();\n        }\n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTTablesWidget4;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTTablesWidget4.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTTablesWidget5 = function () {\n    var table;\n    var datatable;\n\n    // Private methods\n    const initDatatable = () => {\n        // Set date data order\n        const tableRows = table.querySelectorAll('tbody tr');\n\n        tableRows.forEach(row => {\n            const dateRow = row.querySelectorAll('td');\n            const realDate = moment(dateRow[2].innerHTML, \"MMM DD, YYYY\").format(); // select date from 3rd column in table\n            dateRow[2].setAttribute('data-order', realDate);\n        });\n\n        // Init datatable --- more info on datatables: https://datatables.net/manual/\n        datatable = $(table).DataTable({\n            \"info\": false,\n            'order': [],\n            \"lengthChange\": false,\n            'pageLength': 6,\n            'paging': false,\n            'columnDefs': [\n                { orderable: false, targets: 1 }, // Disable ordering on column 1 (product id)\n            ]\n        });\n    }\n\n    // Handle status filter\n    const handleStatusFilter = () => {\n        const select = document.querySelector('[data-kt-table-widget-5=\"filter_status\"]');\n\n        $(select).on('select2:select', function (e) {\n            const value = $(this).val();\n            if (value === 'Show All') {\n                datatable.search('').draw();\n            } else {\n                datatable.search(value).draw();\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            table = document.querySelector('#kt_table_widget_5_table');\n\n            if (!table) {\n                return;\n            }\n\n            initDatatable();\n            handleStatusFilter();\n        }\n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTTablesWidget5;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTTablesWidget5.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTTimelineWidget1 = function () {\n    // Private methods\n    // Day timeline\n    const initTimelineDay = () => {\n        // Detect element\n        const element = document.querySelector('#kt_timeline_widget_1_1');\n        if (!element) {\n            return;\n        }\n\n        if(element.innerHTML){\n            return;\n        }\n\n        // Set variables\n        var now = Date.now();\n        var rootImagePath = element.getAttribute('data-kt-timeline-widget-1-image-root');\n\n        // Build vis-timeline datasets\n        var groups = new vis.DataSet([\n            {\n                id: \"research\",\n                content: \"Research\",\n                order: 1\n            },\n            {\n                id: \"qa\",\n                content: \"Phase 2.6 QA\",\n                order: 2\n            },\n            {\n                id: \"ui\",\n                content: \"UI Design\",\n                order: 3\n            },\n            {\n                id: \"dev\",\n                content: \"Development\",\n                order: 4\n            }\n        ]);\n\n\n        var items = new vis.DataSet([\n            {\n                id: 1,\n                group: 'research',\n                start: now,\n                end: moment(now).add(1.5, 'hours'),\n                content: 'Meeting',\n                progress: \"60%\",\n                color: 'primary',\n                users: [\n                    'avatars/300-6.jpg',\n                    'avatars/300-1.jpg'\n                ]\n            },\n            {\n                id: 2,\n                group: 'qa',\n                start: moment(now).add(1, 'hours'),\n                end: moment(now).add(2, 'hours'),\n                content: 'Testing',\n                progress: \"47%\",\n                color: 'success',\n                users: [\n                    'avatars/300-2.jpg'\n                ]\n            },\n            {\n                id: 3,\n                group: 'ui',\n                start: moment(now).add(30, 'minutes'),\n                end: moment(now).add(2.5, 'hours'),\n                content: 'Landing page',\n                progress: \"55%\",\n                color: 'danger',\n                users: [\n                    'avatars/300-5.jpg',\n                    'avatars/300-20.jpg'\n                ]\n            },\n            {\n                id: 4,\n                group: 'dev',\n                start: moment(now).add(1.5, 'hours'),\n                end: moment(now).add(3, 'hours'),\n                content: 'Products module',\n                progress: \"75%\",\n                color: 'info',\n                users: [\n                    'avatars/300-23.jpg',\n                    'avatars/300-12.jpg',\n                    'avatars/300-9.jpg'\n                ]\n            },\n        ]);\n\n        // Set vis-timeline options\n        var options = {\n            zoomable: false,\n            moveable: false,\n            selectable: false,\n            // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            margin: {\n                item: {\n                    horizontal: 10,\n                    vertical: 35\n                }\n            },\n\n            // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            showCurrentTime: false,\n\n            // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            xss: {\n                disabled: false,\n                filterOptions: {\n                    whiteList: {\n                        div: ['class', 'style'],\n                        img: ['src', 'alt'],\n                        a: ['href', 'class']\n                    },\n                },\n            },\n            // specify a template for the items\n            template: function (item) {\n                // Build users group\n                const users = item.users;\n                let userTemplate = '';\n                users.forEach(user => {\n                    userTemplate += `<div class=\"symbol symbol-circle symbol-25px\"><img src=\"${rootImagePath + user}\" alt=\"\" /></div>`;\n                });\n\n                return `<div class=\"rounded-pill bg-light-${item.color} d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\">\n                    <div class=\"position-absolute rounded-pill d-block bg-${item.color} start-0 top-0 h-100 z-index-1\" style=\"width: ${item.progress};\"></div>\n        \n                    <div class=\"d-flex align-items-center position-relative z-index-2\">\n                        <div class=\"symbol-group symbol-hover flex-nowrap me-3\">\n                            ${userTemplate}\n                        </div>\n        \n                        <a href=\"#\" class=\"fw-bold text-white text-hover-dark\">${item.content}</a>\n                    </div>\n        \n                    <div class=\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\">\n                        ${item.progress}\n                    </div>\n                </div>        \n                `;\n            },\n\n            // Remove block ui on initial draw\n            onInitialDrawComplete: function () {\n                const target = element.closest('[data-kt-timeline-widget-1-blockui=\"true\"]');\n                const blockUI = KTBlockUI.getInstance(target);\n\n                if (blockUI.isBlocked()) {\n                    setTimeout(() => {\n                        blockUI.release();\n                    }, 1000);      \n                }\n            }\n        };\n\n        // Init vis-timeline\n        const timeline = new vis.Timeline(element, items, groups, options);\n\n        // Prevent infinite loop draws\n        timeline.on(\"currentTimeTick\", () => {            \n            // After fired the first time we un-subscribed\n            timeline.off(\"currentTimeTick\");\n        });\n    }\n\n    // Week timeline\n    const initTimelineWeek = () => {\n        // Detect element\n        const element = document.querySelector('#kt_timeline_widget_1_2');\n        if (!element) {\n            return;\n        }\n\n        if(element.innerHTML){\n            return;\n        }\n\n        // Set variables\n        var now = Date.now();\n        var rootImagePath = element.getAttribute('data-kt-timeline-widget-1-image-root');\n\n        // Build vis-timeline datasets\n        var groups = new vis.DataSet([\n            {\n                id: 1,\n                content: \"Research\",\n                order: 1\n            },\n            {\n                id: 2,\n                content: \"Phase 2.6 QA\",\n                order: 2\n            },\n            {\n                id: 3,\n                content: \"UI Design\",\n                order: 3\n            },\n            {\n                id: 4,\n                content: \"Development\",\n                order: 4\n            }\n        ]);\n\n\n        var items = new vis.DataSet([\n            {\n                id: 1,\n                group: 1,\n                start: now,\n                end: moment(now).add(7, 'days'),\n                content: 'Framework',\n                progress: \"71%\",\n                color: 'primary',\n                users: [\n                    'avatars/300-6.jpg',\n                    'avatars/300-1.jpg'\n                ]\n            },\n            {\n                id: 2,\n                group: 2,\n                start: moment(now).add(7, 'days'),\n                end: moment(now).add(14, 'days'),\n                content: 'Accessibility',\n                progress: \"84%\",\n                color: 'success',\n                users: [\n                    'avatars/300-2.jpg'\n                ]\n            },\n            {\n                id: 3,\n                group: 3,\n                start: moment(now).add(3, 'days'),\n                end: moment(now).add(20, 'days'),\n                content: 'Microsites',\n                progress: \"69%\",\n                color: 'danger',\n                users: [\n                    'avatars/300-5.jpg',\n                    'avatars/300-20.jpg'\n                ]\n            },\n            {\n                id: 4,\n                group: 4,\n                start: moment(now).add(10, 'days'),\n                end: moment(now).add(21, 'days'),\n                content: 'Deployment',\n                progress: \"74%\",\n                color: 'info',\n                users: [\n                    'avatars/300-23.jpg',\n                    'avatars/300-12.jpg',\n                    'avatars/300-9.jpg'\n                ]\n            },\n        ]);\n\n        // Set vis-timeline options\n        var options = {\n            zoomable: false,\n            moveable: false,\n            selectable: false,\n\n            // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            margin: {\n                item: {\n                    horizontal: 10,\n                    vertical: 35\n                }\n            },\n\n            // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            showCurrentTime: false,\n\n            // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            xss: {\n                disabled: false,\n                filterOptions: {\n                    whiteList: {\n                        div: ['class', 'style'],\n                        img: ['src', 'alt'],\n                        a: ['href', 'class']\n                    },\n                },\n            },\n            // specify a template for the items\n            template: function (item) {\n                // Build users group\n                const users = item.users;\n                let userTemplate = '';\n                users.forEach(user => {\n                    userTemplate += `<div class=\"symbol symbol-circle symbol-25px\"><img src=\"${rootImagePath + user}\" alt=\"\" /></div>`;\n                });\n\n                return `<div class=\"rounded-pill bg-light-${item.color} d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\">\n                    <div class=\"position-absolute rounded-pill d-block bg-${item.color} start-0 top-0 h-100 z-index-1\" style=\"width: ${item.progress};\"></div>\n        \n                    <div class=\"d-flex align-items-center position-relative z-index-2\">\n                        <div class=\"symbol-group symbol-hover flex-nowrap me-3\">\n                            ${userTemplate}\n                        </div>\n        \n                        <a href=\"#\" class=\"fw-bold text-white text-hover-dark\">${item.content}</a>\n                    </div>\n        \n                    <div class=\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\">\n                        ${item.progress}\n                    </div>\n                </div>        \n                `;\n            },\n\n            // Remove block ui on initial draw\n            onInitialDrawComplete: function () {\n                const target = element.closest('[data-kt-timeline-widget-1-blockui=\"true\"]');\n                const blockUI = KTBlockUI.getInstance(target);\n\n                if (blockUI.isBlocked()) {\n                    setTimeout(() => {\n                        blockUI.release();\n                    }, 1000);      \n                }\n            }\n        };\n\n        // Init vis-timeline\n        const timeline = new vis.Timeline(element, items, groups, options);\n\n        // Prevent infinite loop draws\n        timeline.on(\"currentTimeTick\", () => {            \n            // After fired the first time we un-subscribed\n            timeline.off(\"currentTimeTick\");\n        });\n    }\n\n    // Month timeline\n    const initTimelineMonth = () => {\n        // Detect element\n        const element = document.querySelector('#kt_timeline_widget_1_3');\n        if (!element) {\n            return;\n        }\n\n        if(element.innerHTML){\n            return;\n        }\n\n        // Set variables\n        var now = Date.now();\n        var rootImagePath = element.getAttribute('data-kt-timeline-widget-1-image-root');\n\n        // Build vis-timeline datasets\n        var groups = new vis.DataSet([\n            {\n                id: \"research\",\n                content: \"Research\",\n                order: 1\n            },\n            {\n                id: \"qa\",\n                content: \"Phase 2.6 QA\",\n                order: 2\n            },\n            {\n                id: \"ui\",\n                content: \"UI Design\",\n                order: 3\n            },\n            {\n                id: \"dev\",\n                content: \"Development\",\n                order: 4\n            }\n        ]);\n\n\n        var items = new vis.DataSet([\n            {\n                id: 1,\n                group: 'research',\n                start: now,\n                end: moment(now).add(2, 'months'),\n                content: 'Tags',\n                progress: \"79%\",\n                color: 'primary',\n                users: [\n                    'avatars/300-6.jpg',\n                    'avatars/300-1.jpg'\n                ]\n            },\n            {\n                id: 2,\n                group: 'qa',\n                start: moment(now).add(0.5, 'months'),\n                end: moment(now).add(5, 'months'),\n                content: 'Testing',\n                progress: \"64%\",\n                color: 'success',\n                users: [\n                    'avatars/300-2.jpg'\n                ]\n            },\n            {\n                id: 3,\n                group: 'ui',\n                start: moment(now).add(2, 'months'),\n                end: moment(now).add(6.5, 'months'),\n                content: 'Media',\n                progress: \"82%\",\n                color: 'danger',\n                users: [\n                    'avatars/300-5.jpg',\n                    'avatars/300-20.jpg'\n                ]\n            },\n            {\n                id: 4,\n                group: 'dev',\n                start: moment(now).add(4, 'months'),\n                end: moment(now).add(7, 'months'),\n                content: 'Plugins',\n                progress: \"58%\",\n                color: 'info',\n                users: [\n                    'avatars/300-23.jpg',\n                    'avatars/300-12.jpg',\n                    'avatars/300-9.jpg'\n                ]\n            },\n        ]);\n\n        // Set vis-timeline options\n        var options = {\n            zoomable: false,\n            moveable: false,\n            selectable: false,\n\n            // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            margin: {\n                item: {\n                    horizontal: 10,\n                    vertical: 35\n                }\n            },\n\n            // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            showCurrentTime: false,\n\n            // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            xss: {\n                disabled: false,\n                filterOptions: {\n                    whiteList: {\n                        div: ['class', 'style'],\n                        img: ['src', 'alt'],\n                        a: ['href', 'class']\n                    },\n                },\n            },\n            // specify a template for the items\n            template: function (item) {\n                // Build users group\n                const users = item.users;\n                let userTemplate = '';\n                users.forEach(user => {\n                    userTemplate += `<div class=\"symbol symbol-circle symbol-25px\"><img src=\"${rootImagePath + user}\" alt=\"\" /></div>`;\n                });\n\n                return `<div class=\"rounded-pill bg-light-${item.color} d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\">\n                    <div class=\"position-absolute rounded-pill d-block bg-${item.color} start-0 top-0 h-100 z-index-1\" style=\"width: ${item.progress};\"></div>\n        \n                    <div class=\"d-flex align-items-center position-relative z-index-2\">\n                        <div class=\"symbol-group symbol-hover flex-nowrap me-3\">\n                            ${userTemplate}\n                        </div>\n        \n                        <a href=\"#\" class=\"fw-bold text-white text-hover-dark\">${item.content}</a>\n                    </div>\n        \n                    <div class=\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\">\n                        ${item.progress}\n                    </div>\n                </div>        \n                `;\n            },\n\n            // Remove block ui on initial draw\n            onInitialDrawComplete: function () {\n                const target = element.closest('[data-kt-timeline-widget-1-blockui=\"true\"]');\n                const blockUI = KTBlockUI.getInstance(target);\n\n                if (blockUI.isBlocked()) {\n                    setTimeout(() => {\n                        blockUI.release();\n                    }, 1000);                    \n                }\n            }\n        };\n\n        // Init vis-timeline\n        const timeline = new vis.Timeline(element, items, groups, options);\n\n        // Prevent infinite loop draws\n        timeline.on(\"currentTimeTick\", () => {            \n            // After fired the first time we un-subscribed\n            timeline.off(\"currentTimeTick\");\n        });\n    }\n\n    // Handle BlockUI\n    const handleBlockUI = () => {\n        // Select block ui elements\n        const elements = document.querySelectorAll('[data-kt-timeline-widget-1-blockui=\"true\"]');\n\n        // Init block ui\n        elements.forEach(element => {\n            const blockUI = new KTBlockUI(element, {\n                overlayClass: \"bg-body\",\n            });\n\n            blockUI.block();\n        });\n    }\n\n    // Handle tabs visibility\n    const tabsVisibility = () => {\n        const tabs = document.querySelectorAll('[data-kt-timeline-widget-1=\"tab\"]');\n\n        tabs.forEach(tab => {\n            tab.addEventListener('shown.bs.tab', e => {\n                // Week tab\n                if(tab.getAttribute('href') === '#kt_timeline_widget_1_tab_week'){\n                    initTimelineWeek();\n                }\n\n                // Month tab\n                if(tab.getAttribute('href') === '#kt_timeline_widget_1_tab_month'){\n                    initTimelineMonth();\n                }\n            });\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initTimelineDay();\n            handleBlockUI();\n            tabsVisibility();\n        }\n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTTimelineWidget1;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTTimelineWidget1.init();\n});\n","\"use strict\";\n\n// Class definition\nvar KTTimelineWidget2 = function () {\n    // Private methods\n    var initChart = function(tabSelector, chartSelector, data, initByDefault) {\n        var element = document.querySelector(chartSelector);        \n\n        if (!element) {\n            return;\n        }  \n          \n        var height = parseInt(KTUtil.css(element, 'height'));\n        \n        var options = {\n            series: data,                 \n            chart: {            \n                type: 'donut',\n                width: 200,\n            },\n            colors: [KTUtil.getCssVariableValue('--bs-info'), \n                KTUtil.getCssVariableValue('--bs-success'), \n                KTUtil.getCssVariableValue('--bs-primary'), \n                KTUtil.getCssVariableValue('--bs-danger') \n            ],           \n            dataLabels: {\n                style: {       \n                    fontSize: '10px'                \n                }\n            },         \n            stroke: {\n              width: 0\n            },\n            labels: ['Sales', 'Sales', 'Sales', 'Sales'],\n            legend: {\n                show: false,\n            },\n            fill: {\n                type: 'false',          \n            }     \n        };                     \n\n        var chart = new ApexCharts(element, options);\n\n        var init = false;\n        var tab = document.querySelector(tabSelector);\n        \n        if (initByDefault === true) {\n            chart.render();\n            init = true;\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (init == false) {\n                chart.render();\n                init = true;\n            }\n        })\n    }\n\n    // Public methods\n    return {\n        init: function () {           \n            initChart('#kt_timeline_widget_2_tab_1', '#kt_timeline_widget_2_chart_1', [10.6, 100, 6.8, 2], true);\n            initChart('#kt_timeline_widget_2_tab_2', '#kt_timeline_widget_2_chart_2', [70, 13, 11, 2], false);              \n        }   \n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTTimelineWidget2;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTTimelineWidget2.init();\n});\n\n\n ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(\"../src/js/widgets/cards/widget-1.js\");\n__webpack_require__(\"../src/js/widgets/cards/widget-10.js\");\n__webpack_require__(\"../src/js/widgets/cards/widget-4.js\");\n__webpack_require__(\"../src/js/widgets/cards/widget-6.js\");\n__webpack_require__(\"../src/js/widgets/cards/widget-8.js\");\n__webpack_require__(\"../src/js/widgets/cards/widget-9.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-1.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-10.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-11.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-12.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-13.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-14.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-15.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-16.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-17.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-18.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-2.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-3.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-4.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-5.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-6.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-7.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-8.js\");\n__webpack_require__(\"../src/js/widgets/charts/widget-9.js\");\n__webpack_require__(\"../src/js/widgets/maps/widget-1.js\");\n__webpack_require__(\"../src/js/widgets/sliders/widget-1.js\");\n__webpack_require__(\"../src/js/widgets/sliders/widget-3.js\");\n__webpack_require__(\"../src/js/widgets/tables/widget-3.js\");\n__webpack_require__(\"../src/js/widgets/tables/widget-4.js\");\n__webpack_require__(\"../src/js/widgets/tables/widget-5.js\");\n__webpack_require__(\"../src/js/widgets/timeline/widget-1.js\");\nvar __webpack_exports__ = __webpack_require__(\"../src/js/widgets/timeline/widget-2.js\");\n",""],"names":[],"sourceRoot":""}